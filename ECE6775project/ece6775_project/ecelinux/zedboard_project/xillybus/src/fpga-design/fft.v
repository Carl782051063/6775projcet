// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_R_address0,
        X_R_ce0,
        X_R_we0,
        X_R_d0,
        X_R_q0,
        X_I_address0,
        X_I_ce0,
        X_I_we0,
        X_I_d0,
        X_I_q0
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] X_R_address0;
output   X_R_ce0;
output   X_R_we0;
output  [31:0] X_R_d0;
input  [31:0] X_R_q0;
output  [13:0] X_I_address0;
output   X_I_ce0;
output   X_I_we0;
output  [31:0] X_I_d0;
input  [31:0] X_I_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] X_R_address0;
reg X_R_ce0;
reg X_R_we0;
reg[31:0] X_R_d0;
reg[13:0] X_I_address0;
reg X_I_ce0;
reg X_I_we0;
reg[31:0] X_I_d0;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [12:0] cosa_lookup_table_address0;
reg    cosa_lookup_table_ce0;
wire   [63:0] cosa_lookup_table_q0;
wire   [12:0] sina_lookup_table_address0;
reg    sina_lookup_table_ce0;
wire   [63:0] sina_lookup_table_q0;
reg   [31:0] reg_230;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state25;
reg   [31:0] reg_237;
wire   [31:0] grp_fu_198_p2;
reg   [31:0] reg_244;
wire    ap_CS_fsm_state30;
wire   [31:0] grp_fu_202_p2;
reg   [31:0] reg_250;
wire   [31:0] zext_ln1788_fu_272_p1;
reg   [31:0] zext_ln1788_reg_420;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1786_fu_260_p2;
wire   [13:0] trunc_ln_fu_276_p4;
reg   [13:0] trunc_ln_reg_425;
wire   [31:0] numBF_fu_286_p1;
reg   [31:0] numBF_reg_430;
wire   [31:0] i_cast_fu_290_p1;
reg   [31:0] i_cast_reg_435;
wire    ap_CS_fsm_state4;
wire   [13:0] j_fu_299_p2;
reg   [13:0] j_reg_443;
wire   [0:0] icmp_ln1796_fu_294_p2;
wire   [31:0] step_fu_359_p3;
wire   [3:0] stage_fu_367_p2;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_fu_222_p1;
reg   [31:0] c_reg_478;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_226_p1;
reg   [31:0] s_reg_484;
reg   [13:0] X_R_addr_reg_493;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln1813_fu_383_p2;
reg   [13:0] X_I_addr_reg_498;
reg   [13:0] X_R_addr_1_reg_503;
reg   [13:0] X_I_addr_1_reg_508;
wire   [31:0] i_1_fu_406_p2;
reg   [31:0] i_1_reg_513;
wire   [31:0] k_fu_411_p2;
wire   [31:0] grp_fu_206_p2;
reg   [31:0] tmp_reg_523;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_210_p2;
reg   [31:0] tmp_1_reg_528;
wire   [31:0] grp_fu_214_p2;
reg   [31:0] tmp_2_reg_533;
wire   [31:0] grp_fu_218_p2;
reg   [31:0] tmp_3_reg_538;
reg   [31:0] tmp_4_reg_543;
wire    ap_CS_fsm_state22;
reg   [31:0] tmp_5_reg_548;
wire    grp_bit_reverse_fu_190_ap_start;
wire    grp_bit_reverse_fu_190_ap_done;
wire    grp_bit_reverse_fu_190_ap_idle;
wire    grp_bit_reverse_fu_190_ap_ready;
wire   [13:0] grp_bit_reverse_fu_190_X_R_address0;
wire    grp_bit_reverse_fu_190_X_R_ce0;
wire    grp_bit_reverse_fu_190_X_R_we0;
wire   [31:0] grp_bit_reverse_fu_190_X_R_d0;
wire   [13:0] grp_bit_reverse_fu_190_X_I_address0;
wire    grp_bit_reverse_fu_190_X_I_ce0;
wire    grp_bit_reverse_fu_190_X_I_we0;
wire   [31:0] grp_bit_reverse_fu_190_X_I_d0;
reg   [31:0] step_0_reg_134;
wire    ap_CS_fsm_state2;
reg   [3:0] stage_0_reg_146;
reg   [13:0] i_reg_158;
reg  signed [31:0] k_0_reg_169;
reg  signed [31:0] i_0_reg_181;
wire    ap_CS_fsm_state31;
reg    grp_bit_reverse_fu_190_ap_start_reg;
wire  signed [63:0] sext_ln1797_fu_305_p1;
wire  signed [63:0] sext_ln1816_fu_394_p1;
wire  signed [63:0] sext_ln1818_fu_400_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
reg   [31:0] grp_fu_198_p0;
reg   [31:0] grp_fu_198_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state26;
reg   [31:0] grp_fu_202_p0;
reg   [31:0] grp_fu_202_p1;
wire    ap_CS_fsm_state9;
wire   [14:0] zext_ln1786_fu_256_p1;
wire   [14:0] DFTpts_fu_266_p2;
wire   [31:0] sub_ln1825_fu_319_p2;
wire   [30:0] lshr_ln1825_1_fu_325_p4;
wire   [31:0] zext_ln1825_fu_335_p1;
wire   [30:0] lshr_ln1825_2_fu_345_p4;
wire   [0:0] tmp_10_fu_311_p3;
wire   [31:0] sub_ln1825_1_fu_339_p2;
wire   [31:0] zext_ln1825_1_fu_355_p1;
wire   [17:0] tmp_11_fu_373_p4;
wire   [31:0] i_lower_fu_389_p2;
reg   [1:0] grp_fu_198_opcode;
reg   [1:0] grp_fu_202_opcode;
reg   [30:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 grp_bit_reverse_fu_190_ap_start_reg = 1'b0;
end

fft_cosa_lookup_tbkb #(
    .DataWidth( 64 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
cosa_lookup_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cosa_lookup_table_address0),
    .ce0(cosa_lookup_table_ce0),
    .q0(cosa_lookup_table_q0)
);

fft_sina_lookup_tcud #(
    .DataWidth( 64 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
sina_lookup_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sina_lookup_table_address0),
    .ce0(sina_lookup_table_ce0),
    .q0(sina_lookup_table_q0)
);

bit_reverse grp_bit_reverse_fu_190(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_bit_reverse_fu_190_ap_start),
    .ap_done(grp_bit_reverse_fu_190_ap_done),
    .ap_idle(grp_bit_reverse_fu_190_ap_idle),
    .ap_ready(grp_bit_reverse_fu_190_ap_ready),
    .X_R_address0(grp_bit_reverse_fu_190_X_R_address0),
    .X_R_ce0(grp_bit_reverse_fu_190_X_R_ce0),
    .X_R_we0(grp_bit_reverse_fu_190_X_R_we0),
    .X_R_d0(grp_bit_reverse_fu_190_X_R_d0),
    .X_R_q0(X_R_q0),
    .X_I_address0(grp_bit_reverse_fu_190_X_I_address0),
    .X_I_ce0(grp_bit_reverse_fu_190_X_I_ce0),
    .X_I_we0(grp_bit_reverse_fu_190_X_I_we0),
    .X_I_d0(grp_bit_reverse_fu_190_X_I_d0),
    .X_I_q0(X_I_q0)
);

dut_faddfsub_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_faddfsub_32nsdEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(grp_fu_198_p1),
    .opcode(grp_fu_198_opcode),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

dut_faddfsub_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_faddfsub_32nsdEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_202_p0),
    .din1(grp_fu_202_p1),
    .opcode(grp_fu_202_opcode),
    .ce(1'b1),
    .dout(grp_fu_202_p2)
);

dut_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32neOg_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_230),
    .din1(c_reg_478),
    .ce(1'b1),
    .dout(grp_fu_206_p2)
);

dut_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32neOg_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_237),
    .din1(s_reg_484),
    .ce(1'b1),
    .dout(grp_fu_210_p2)
);

dut_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32neOg_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_237),
    .din1(c_reg_478),
    .ce(1'b1),
    .dout(grp_fu_214_p2)
);

dut_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32neOg_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_230),
    .din1(s_reg_484),
    .ce(1'b1),
    .dout(grp_fu_218_p2)
);

dut_fptrunc_64ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
dut_fptrunc_64ns_fYi_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cosa_lookup_table_q0),
    .ce(1'b1),
    .dout(grp_fu_222_p1)
);

dut_fptrunc_64ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
dut_fptrunc_64ns_fYi_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sina_lookup_table_q0),
    .ce(1'b1),
    .dout(grp_fu_226_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_bit_reverse_fu_190_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_bit_reverse_fu_190_ap_start_reg <= 1'b1;
        end else if ((grp_bit_reverse_fu_190_ap_ready == 1'b1)) begin
            grp_bit_reverse_fu_190_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_0_reg_181 <= i_1_reg_513;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_reg_181 <= i_cast_reg_435;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1813_fu_383_p2 == 1'd0))) begin
        i_reg_158 <= j_reg_443;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1786_fu_260_p2 == 1'd0))) begin
        i_reg_158 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1813_fu_383_p2 == 1'd0))) begin
        k_0_reg_169 <= k_fu_411_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1786_fu_260_p2 == 1'd0))) begin
        k_0_reg_169 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln1796_fu_294_p2 == 1'd1))) begin
        stage_0_reg_146 <= stage_fu_367_p2;
    end else if (((grp_bit_reverse_fu_190_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        stage_0_reg_146 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln1796_fu_294_p2 == 1'd1))) begin
        step_0_reg_134 <= step_fu_359_p3;
    end else if (((grp_bit_reverse_fu_190_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        step_0_reg_134 <= 32'd8192;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1813_fu_383_p2 == 1'd1))) begin
        X_I_addr_1_reg_508 <= sext_ln1818_fu_400_p1;
        X_I_addr_reg_498 <= sext_ln1816_fu_394_p1;
        X_R_addr_1_reg_503 <= sext_ln1818_fu_400_p1;
        X_R_addr_reg_493 <= sext_ln1816_fu_394_p1;
        i_1_reg_513 <= i_1_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c_reg_478 <= grp_fu_222_p1;
        s_reg_484 <= grp_fu_226_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_cast_reg_435[13 : 0] <= i_cast_fu_290_p1[13 : 0];
        j_reg_443 <= j_fu_299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1786_fu_260_p2 == 1'd0))) begin
        numBF_reg_430[13 : 0] <= numBF_fu_286_p1[13 : 0];
        trunc_ln_reg_425 <= {{DFTpts_fu_266_p2[14:1]}};
        zext_ln1788_reg_420[14 : 0] <= zext_ln1788_fu_272_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_230 <= X_R_q0;
        reg_237 <= X_I_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_244 <= grp_fu_198_p2;
        reg_250 <= grp_fu_202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_1_reg_528 <= grp_fu_210_p2;
        tmp_2_reg_533 <= grp_fu_214_p2;
        tmp_3_reg_538 <= grp_fu_218_p2;
        tmp_reg_523 <= grp_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_4_reg_543 <= grp_fu_198_p2;
        tmp_5_reg_548 <= grp_fu_202_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        X_I_address0 = X_I_addr_reg_498;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state31))) begin
        X_I_address0 = X_I_addr_1_reg_508;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_address0 = sext_ln1816_fu_394_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_address0 = grp_bit_reverse_fu_190_X_I_address0;
    end else begin
        X_I_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state7))) begin
        X_I_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_ce0 = grp_bit_reverse_fu_190_X_I_ce0;
    end else begin
        X_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        X_I_d0 = reg_250;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        X_I_d0 = tmp_5_reg_548;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_d0 = grp_bit_reverse_fu_190_X_I_d0;
    end else begin
        X_I_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state31))) begin
        X_I_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_we0 = grp_bit_reverse_fu_190_X_I_we0;
    end else begin
        X_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        X_R_address0 = X_R_addr_reg_493;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state31))) begin
        X_R_address0 = X_R_addr_1_reg_503;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_address0 = sext_ln1816_fu_394_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_address0 = grp_bit_reverse_fu_190_X_R_address0;
    end else begin
        X_R_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state7))) begin
        X_R_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_ce0 = grp_bit_reverse_fu_190_X_R_ce0;
    end else begin
        X_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        X_R_d0 = reg_244;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        X_R_d0 = tmp_4_reg_543;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_d0 = grp_bit_reverse_fu_190_X_R_d0;
    end else begin
        X_R_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state31))) begin
        X_R_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_we0 = grp_bit_reverse_fu_190_X_R_we0;
    end else begin
        X_R_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln1786_fu_260_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1786_fu_260_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cosa_lookup_table_ce0 = 1'b1;
    end else begin
        cosa_lookup_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_198_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_198_opcode = 2'd0;
    end else begin
        grp_fu_198_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_198_p0 = reg_230;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_198_p0 = tmp_reg_523;
    end else begin
        grp_fu_198_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_198_p1 = reg_244;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_198_p1 = tmp_1_reg_528;
    end else begin
        grp_fu_198_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_202_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_202_opcode = 2'd0;
    end else begin
        grp_fu_202_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_202_p0 = reg_237;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_202_p0 = tmp_2_reg_533;
    end else begin
        grp_fu_202_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_202_p1 = reg_250;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_202_p1 = tmp_3_reg_538;
    end else begin
        grp_fu_202_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sina_lookup_table_ce0 = 1'b1;
    end else begin
        sina_lookup_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_bit_reverse_fu_190_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1786_fu_260_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln1796_fu_294_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1813_fu_383_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DFTpts_fu_266_p2 = 15'd1 << zext_ln1786_fu_256_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign cosa_lookup_table_address0 = sext_ln1797_fu_305_p1;

assign grp_bit_reverse_fu_190_ap_start = grp_bit_reverse_fu_190_ap_start_reg;

assign i_1_fu_406_p2 = ($signed(zext_ln1788_reg_420) + $signed(i_0_reg_181));

assign i_cast_fu_290_p1 = i_reg_158;

assign i_lower_fu_389_p2 = ($signed(i_0_reg_181) + $signed(numBF_reg_430));

assign icmp_ln1786_fu_260_p2 = ((stage_0_reg_146 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln1796_fu_294_p2 = ((i_reg_158 == trunc_ln_reg_425) ? 1'b1 : 1'b0);

assign icmp_ln1813_fu_383_p2 = (($signed(tmp_11_fu_373_p4) < $signed(18'd1)) ? 1'b1 : 1'b0);

assign j_fu_299_p2 = (i_reg_158 + 14'd1);

assign k_fu_411_p2 = ($signed(step_0_reg_134) + $signed(k_0_reg_169));

assign lshr_ln1825_1_fu_325_p4 = {{sub_ln1825_fu_319_p2[31:1]}};

assign lshr_ln1825_2_fu_345_p4 = {{step_0_reg_134[31:1]}};

assign numBF_fu_286_p1 = trunc_ln_fu_276_p4;

assign sext_ln1797_fu_305_p1 = k_0_reg_169;

assign sext_ln1816_fu_394_p1 = $signed(i_lower_fu_389_p2);

assign sext_ln1818_fu_400_p1 = i_0_reg_181;

assign sina_lookup_table_address0 = sext_ln1797_fu_305_p1;

assign stage_fu_367_p2 = (stage_0_reg_146 + 4'd1);

assign step_fu_359_p3 = ((tmp_10_fu_311_p3[0:0] === 1'b1) ? sub_ln1825_1_fu_339_p2 : zext_ln1825_1_fu_355_p1);

assign sub_ln1825_1_fu_339_p2 = (32'd0 - zext_ln1825_fu_335_p1);

assign sub_ln1825_fu_319_p2 = (32'd0 - step_0_reg_134);

assign tmp_10_fu_311_p3 = step_0_reg_134[32'd31];

assign tmp_11_fu_373_p4 = {{i_0_reg_181[31:14]}};

assign trunc_ln_fu_276_p4 = {{DFTpts_fu_266_p2[14:1]}};

assign zext_ln1786_fu_256_p1 = stage_0_reg_146;

assign zext_ln1788_fu_272_p1 = DFTpts_fu_266_p2;

assign zext_ln1825_1_fu_355_p1 = lshr_ln1825_2_fu_345_p4;

assign zext_ln1825_fu_335_p1 = lshr_ln1825_1_fu_325_p4;

always @ (posedge ap_clk) begin
    zext_ln1788_reg_420[31:15] <= 17'b00000000000000000;
    numBF_reg_430[31:14] <= 18'b000000000000000000;
    i_cast_reg_435[31:14] <= 18'b000000000000000000;
end

endmodule //fft
