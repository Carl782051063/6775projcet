// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dut,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.456000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=143,HLS_SYN_DSP=24,HLS_SYN_FF=3319,HLS_SYN_LUT=6090,HLS_VERSION=2019_2_1}" *)

module dut (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_V_V_dout,
        strm_in_V_V_empty_n,
        strm_in_V_V_read,
        strm_out_V_V_din,
        strm_out_V_V_full_n,
        strm_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 49'd1;
parameter    ap_ST_fsm_state2 = 49'd2;
parameter    ap_ST_fsm_state3 = 49'd4;
parameter    ap_ST_fsm_state4 = 49'd8;
parameter    ap_ST_fsm_state5 = 49'd16;
parameter    ap_ST_fsm_state6 = 49'd32;
parameter    ap_ST_fsm_state7 = 49'd64;
parameter    ap_ST_fsm_state8 = 49'd128;
parameter    ap_ST_fsm_state9 = 49'd256;
parameter    ap_ST_fsm_state10 = 49'd512;
parameter    ap_ST_fsm_state11 = 49'd1024;
parameter    ap_ST_fsm_state12 = 49'd2048;
parameter    ap_ST_fsm_state13 = 49'd4096;
parameter    ap_ST_fsm_state14 = 49'd8192;
parameter    ap_ST_fsm_state15 = 49'd16384;
parameter    ap_ST_fsm_state16 = 49'd32768;
parameter    ap_ST_fsm_state17 = 49'd65536;
parameter    ap_ST_fsm_state18 = 49'd131072;
parameter    ap_ST_fsm_state19 = 49'd262144;
parameter    ap_ST_fsm_state20 = 49'd524288;
parameter    ap_ST_fsm_state21 = 49'd1048576;
parameter    ap_ST_fsm_state22 = 49'd2097152;
parameter    ap_ST_fsm_state23 = 49'd4194304;
parameter    ap_ST_fsm_state24 = 49'd8388608;
parameter    ap_ST_fsm_state25 = 49'd16777216;
parameter    ap_ST_fsm_state26 = 49'd33554432;
parameter    ap_ST_fsm_state27 = 49'd67108864;
parameter    ap_ST_fsm_state28 = 49'd134217728;
parameter    ap_ST_fsm_state29 = 49'd268435456;
parameter    ap_ST_fsm_state30 = 49'd536870912;
parameter    ap_ST_fsm_state31 = 49'd1073741824;
parameter    ap_ST_fsm_state32 = 49'd2147483648;
parameter    ap_ST_fsm_state33 = 49'd4294967296;
parameter    ap_ST_fsm_state34 = 49'd8589934592;
parameter    ap_ST_fsm_state35 = 49'd17179869184;
parameter    ap_ST_fsm_state36 = 49'd34359738368;
parameter    ap_ST_fsm_state37 = 49'd68719476736;
parameter    ap_ST_fsm_state38 = 49'd137438953472;
parameter    ap_ST_fsm_state39 = 49'd274877906944;
parameter    ap_ST_fsm_state40 = 49'd549755813888;
parameter    ap_ST_fsm_state41 = 49'd1099511627776;
parameter    ap_ST_fsm_state42 = 49'd2199023255552;
parameter    ap_ST_fsm_state43 = 49'd4398046511104;
parameter    ap_ST_fsm_state44 = 49'd8796093022208;
parameter    ap_ST_fsm_state45 = 49'd17592186044416;
parameter    ap_ST_fsm_state46 = 49'd35184372088832;
parameter    ap_ST_fsm_state47 = 49'd70368744177664;
parameter    ap_ST_fsm_state48 = 49'd140737488355328;
parameter    ap_ST_fsm_state49 = 49'd281474976710656;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_V_V_dout;
input   strm_in_V_V_empty_n;
output   strm_in_V_V_read;
output  [31:0] strm_out_V_V_din;
input   strm_out_V_V_full_n;
output   strm_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg strm_in_V_V_read;
reg[31:0] strm_out_V_V_din;
reg strm_out_V_V_write;

(* fsm_encoding = "none" *) reg   [48:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [13:0] freq_V_address0;
reg    freq_V_ce0;
wire   [14:0] freq_V_q0;
reg    strm_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1677_fu_459_p2;
wire    ap_CS_fsm_state3;
reg    strm_out_V_V_blk_n;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire   [31:0] input_real_q0;
reg   [31:0] reg_433;
wire    ap_CS_fsm_state7;
wire   [31:0] input_real_q1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state41;
wire   [31:0] input_imag_q0;
reg   [31:0] reg_440;
wire   [31:0] input_imag_q1;
wire   [31:0] grp_fu_410_p2;
reg   [31:0] reg_447;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state45;
wire   [31:0] grp_fu_414_p2;
reg   [31:0] reg_453;
wire   [14:0] i_fu_465_p2;
reg   [14:0] i_reg_830;
reg    ap_block_state2;
reg   [31:0] tmp_V_2_reg_835;
reg   [13:0] p_0205_0_load_reg_854;
wire    ap_CS_fsm_state5;
wire   [13:0] j_fu_505_p2;
reg   [13:0] j_reg_863;
wire   [63:0] zext_ln1702_fu_511_p1;
reg   [63:0] zext_ln1702_reg_868;
wire   [0:0] icmp_ln1701_fu_499_p2;
wire   [0:0] or_ln1702_fu_528_p2;
reg   [0:0] or_ln1702_reg_880;
wire    ap_CS_fsm_state6;
reg   [13:0] input_real_addr_4_reg_884;
reg   [13:0] input_imag_addr_7_reg_890;
wire   [31:0] grp_fu_406_p2;
reg   [31:0] max_reg_896;
wire    ap_CS_fsm_state16;
wire   [0:0] or_ln1712_fu_569_p2;
reg   [0:0] or_ln1712_reg_903;
wire    ap_CS_fsm_state18;
wire   [13:0] select_ln1719_fu_637_p3;
reg   [13:0] select_ln1719_reg_918;
wire    ap_CS_fsm_state19;
wire   [31:0] select_ln1719_1_fu_644_p3;
reg   [31:0] select_ln1719_1_reg_923;
wire   [8:0] zext_ln1728_fu_658_p1;
reg   [8:0] zext_ln1728_reg_928;
wire    ap_CS_fsm_state21;
reg   [13:0] input_real_addr_1_reg_936;
wire   [0:0] icmp_ln1728_fu_662_p2;
reg   [13:0] input_imag_addr_1_reg_942;
wire   [13:0] shift_idex_V_fu_684_p2;
reg   [13:0] shift_idex_V_reg_948;
wire   [7:0] z_fu_696_p2;
reg   [7:0] z_reg_953;
wire    ap_CS_fsm_state27;
wire   [14:0] i_2_fu_723_p2;
reg   [14:0] i_2_reg_961;
wire    ap_CS_fsm_state35;
reg   [13:0] input_imag_addr_4_reg_966;
wire   [0:0] icmp_ln1738_fu_717_p2;
wire   [14:0] i_3_fu_755_p2;
reg   [14:0] i_3_reg_975;
wire    ap_CS_fsm_state38;
reg   [13:0] input_imag_addr_9_reg_980;
wire   [0:0] icmp_ln1743_fu_749_p2;
wire   [14:0] i_4_fu_787_p2;
reg   [14:0] i_4_reg_989;
wire    ap_CS_fsm_state40;
reg   [13:0] input_real_addr_7_reg_994;
wire   [0:0] icmp_ln1746_fu_781_p2;
reg   [13:0] input_imag_addr_10_reg_1000;
wire   [14:0] i_5_fu_805_p2;
reg   [14:0] i_5_reg_1009;
wire    ap_CS_fsm_state47;
wire   [0:0] icmp_ln1750_fu_799_p2;
reg   [13:0] input_real_address0;
reg    input_real_ce0;
reg    input_real_we0;
reg   [31:0] input_real_d0;
reg   [13:0] input_real_address1;
reg    input_real_ce1;
reg    input_real_we1;
reg   [31:0] input_real_d1;
reg   [13:0] input_imag_address0;
reg    input_imag_ce0;
reg    input_imag_we0;
reg   [31:0] input_imag_d0;
reg   [13:0] input_imag_address1;
reg    input_imag_ce1;
reg    input_imag_we1;
reg   [31:0] input_imag_d1;
wire    grp_fft_fu_396_ap_start;
wire    grp_fft_fu_396_ap_done;
wire    grp_fft_fu_396_ap_idle;
wire    grp_fft_fu_396_ap_ready;
wire   [13:0] grp_fft_fu_396_X_R_address0;
wire    grp_fft_fu_396_X_R_ce0;
wire    grp_fft_fu_396_X_R_we0;
wire   [31:0] grp_fft_fu_396_X_R_d0;
wire   [13:0] grp_fft_fu_396_X_I_address0;
wire    grp_fft_fu_396_X_I_ce0;
wire    grp_fft_fu_396_X_I_we0;
wire   [31:0] grp_fft_fu_396_X_I_d0;
reg   [14:0] i_0_reg_307;
reg   [13:0] shift_idex_V_1_reg_319;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state20;
reg   [13:0] t_V_reg_331;
wire    ap_CS_fsm_state34;
reg   [7:0] z_0_reg_340;
reg   [14:0] i2_0_reg_352;
wire    ap_CS_fsm_state36;
reg   [14:0] i3_0_reg_363;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
reg   [14:0] i4_0_reg_374;
wire    ap_CS_fsm_state46;
reg   [14:0] i5_0_reg_385;
reg    grp_fft_fu_396_ap_start_reg;
reg    ap_block_state2_ignore_call2;
wire   [63:0] zext_ln1682_fu_490_p1;
wire   [63:0] zext_ln1704_fu_534_p1;
wire   [13:0] input_imag_addr_5_gep_fu_189_p3;
wire   [63:0] zext_ln1714_fu_581_p1;
wire   [0:0] and_ln1712_fu_575_p2;
wire  signed [63:0] sext_ln544_fu_678_p1;
wire   [63:0] zext_ln1729_fu_690_p1;
wire   [63:0] zext_ln1731_fu_711_p1;
wire   [63:0] zext_ln1739_fu_729_p1;
wire   [63:0] zext_ln1744_fu_761_p1;
wire   [63:0] zext_ln1747_fu_793_p1;
wire   [63:0] zext_ln1751_fu_811_p1;
reg   [13:0] p_0205_0_fu_104;
reg   [31:0] max_0_fu_108;
wire   [31:0] tmp_V_fu_817_p1;
wire   [31:0] tmp_V_1_fu_822_p1;
wire   [31:0] bitcast_ln1680_fu_481_p1;
wire    ap_CS_fsm_state28;
wire   [31:0] bitcast_ln1681_fu_485_p1;
wire   [31:0] bitcast_ln1739_1_fu_744_p1;
wire   [31:0] bitcast_ln1744_1_fu_776_p1;
wire    ap_CS_fsm_state12;
reg   [31:0] grp_fu_410_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state42;
reg   [31:0] grp_fu_414_p1;
reg   [31:0] grp_fu_422_p1;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln1495_fu_516_p2;
wire   [0:0] icmp_ln1494_fu_522_p2;
wire   [13:0] grp_fu_427_p2;
wire   [31:0] bitcast_ln1712_fu_540_p1;
wire   [7:0] tmp_fu_543_p4;
wire   [22:0] trunc_ln1712_fu_553_p1;
wire   [0:0] icmp_ln1712_1_fu_563_p2;
wire   [0:0] icmp_ln1712_fu_557_p2;
wire   [0:0] grp_fu_422_p2;
wire   [31:0] bitcast_ln1719_fu_591_p1;
wire   [7:0] tmp_6_fu_594_p4;
wire   [22:0] trunc_ln1719_fu_604_p1;
wire   [0:0] icmp_ln1719_1_fu_614_p2;
wire   [0:0] icmp_ln1719_fu_608_p2;
wire   [0:0] or_ln1719_fu_620_p2;
wire   [0:0] and_ln1719_fu_626_p2;
wire   [0:0] and_ln1719_1_fu_631_p2;
wire   [14:0] zext_ln215_fu_668_p1;
wire   [14:0] ret_V_fu_672_p2;
wire   [8:0] xor_ln1731_fu_702_p2;
wire  signed [13:0] sext_ln1731_fu_707_p1;
wire   [31:0] bitcast_ln1739_fu_734_p1;
wire   [31:0] xor_ln1739_fu_738_p2;
wire   [31:0] bitcast_ln1744_fu_766_p1;
wire   [31:0] xor_ln1744_fu_770_p2;
reg   [4:0] grp_fu_422_opcode;
reg   [48:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 49'd1;
#0 grp_fft_fu_396_ap_start_reg = 1'b0;
end

dut_freq_V #(
    .DataWidth( 15 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
freq_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freq_V_address0),
    .ce0(freq_V_ce0),
    .q0(freq_V_q0)
);

dut_input_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
input_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_real_address0),
    .ce0(input_real_ce0),
    .we0(input_real_we0),
    .d0(input_real_d0),
    .q0(input_real_q0),
    .address1(input_real_address1),
    .ce1(input_real_ce1),
    .we1(input_real_we1),
    .d1(input_real_d1),
    .q1(input_real_q1)
);

dut_input_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
input_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_imag_address0),
    .ce0(input_imag_ce0),
    .we0(input_imag_we0),
    .d0(input_imag_d0),
    .q0(input_imag_q0),
    .address1(input_imag_address1),
    .ce1(input_imag_ce1),
    .we1(input_imag_we1),
    .d1(input_imag_d1),
    .q1(input_imag_q1)
);

fft grp_fft_fu_396(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_fu_396_ap_start),
    .ap_done(grp_fft_fu_396_ap_done),
    .ap_idle(grp_fft_fu_396_ap_idle),
    .ap_ready(grp_fft_fu_396_ap_ready),
    .X_R_address0(grp_fft_fu_396_X_R_address0),
    .X_R_ce0(grp_fft_fu_396_X_R_ce0),
    .X_R_we0(grp_fft_fu_396_X_R_we0),
    .X_R_d0(grp_fft_fu_396_X_R_d0),
    .X_R_q0(input_real_q0),
    .X_I_address0(grp_fft_fu_396_X_I_address0),
    .X_I_ce0(grp_fft_fu_396_X_I_ce0),
    .X_I_we0(grp_fft_fu_396_X_I_we0),
    .X_I_d0(grp_fft_fu_396_X_I_d0),
    .X_I_q0(input_imag_q0)
);

dut_fadd_32ns_32ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ng8j_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_447),
    .din1(reg_453),
    .ce(1'b1),
    .dout(grp_fu_406_p2)
);

dut_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32neOg_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_433),
    .din1(grp_fu_410_p1),
    .ce(1'b1),
    .dout(grp_fu_410_p2)
);

dut_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32neOg_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_440),
    .din1(grp_fu_414_p1),
    .ce(1'b1),
    .dout(grp_fu_414_p2)
);

dut_fcmp_32ns_32nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32nhbi_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(max_reg_896),
    .din1(grp_fu_422_p1),
    .ce(1'b1),
    .opcode(grp_fu_422_opcode),
    .dout(grp_fu_422_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_fu_396_ap_start_reg <= 1'b0;
    end else begin
        if (((~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (icmp_ln1677_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln1738_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35)))) begin
            grp_fft_fu_396_ap_start_reg <= 1'b1;
        end else if ((grp_fft_fu_396_ap_ready == 1'b1)) begin
            grp_fft_fu_396_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1728_fu_662_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        i2_0_reg_352 <= 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        i2_0_reg_352 <= i_2_reg_961;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i3_0_reg_363 <= i_3_reg_975;
    end else if (((grp_fft_fu_396_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        i3_0_reg_363 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1743_fu_749_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        i4_0_reg_374 <= 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i4_0_reg_374 <= i_4_reg_989;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1746_fu_781_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        i5_0_reg_385 <= 15'd0;
    end else if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        i5_0_reg_385 <= i_5_reg_1009;
    end
end

always @ (posedge ap_clk) begin
    if (((strm_in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_307 <= i_reg_830;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_307 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1702_reg_880 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        max_0_fu_108 <= select_ln1719_1_reg_923;
    end else if ((~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (icmp_ln1677_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        max_0_fu_108 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1702_reg_880 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        p_0205_0_fu_104 <= select_ln1719_reg_918;
    end else if ((~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (icmp_ln1677_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_0205_0_fu_104 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        reg_433 <= input_real_q1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_433 <= input_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        reg_440 <= input_imag_q1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state7) | ((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state48)))) begin
        reg_440 <= input_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        shift_idex_V_1_reg_319 <= j_reg_863;
    end else if (((grp_fft_fu_396_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        shift_idex_V_1_reg_319 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1701_fu_499_p2 == 1'd1))) begin
        t_V_reg_331 <= p_0205_0_fu_104;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        t_V_reg_331 <= shift_idex_V_reg_948;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1701_fu_499_p2 == 1'd1))) begin
        z_0_reg_340 <= 8'd110;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        z_0_reg_340 <= z_reg_953;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i_2_reg_961 <= i_2_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_3_reg_975 <= i_3_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_4_reg_989 <= i_4_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        i_5_reg_1009 <= i_5_fu_805_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_830 <= i_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1746_fu_781_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        input_imag_addr_10_reg_1000 <= zext_ln1747_fu_793_p1;
        input_real_addr_7_reg_994 <= zext_ln1747_fu_793_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1728_fu_662_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        input_imag_addr_1_reg_942 <= sext_ln544_fu_678_p1;
        input_real_addr_1_reg_936 <= sext_ln544_fu_678_p1;
        shift_idex_V_reg_948 <= shift_idex_V_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1738_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        input_imag_addr_4_reg_966 <= zext_ln1739_fu_729_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1702_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        input_imag_addr_7_reg_890 <= zext_ln1702_reg_868;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1743_fu_749_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        input_imag_addr_9_reg_980 <= zext_ln1744_fu_761_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        input_real_addr_4_reg_884 <= zext_ln1702_reg_868;
        or_ln1702_reg_880 <= or_ln1702_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_reg_863 <= j_fu_505_p2;
        p_0205_0_load_reg_854 <= p_0205_0_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        max_reg_896 <= grp_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        or_ln1712_reg_903 <= or_ln1712_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_447 <= grp_fu_410_p2;
        reg_453 <= grp_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        select_ln1719_1_reg_923 <= select_ln1719_1_fu_644_p3;
        select_ln1719_reg_918 <= select_ln1719_fu_637_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (icmp_ln1677_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_2_reg_835 <= strm_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        z_reg_953 <= z_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1701_fu_499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        zext_ln1702_reg_868[13 : 0] <= zext_ln1702_fu_511_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        zext_ln1728_reg_928[7 : 0] <= zext_ln1728_fu_658_p1[7 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln1750_fu_799_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1750_fu_799_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        freq_V_ce0 = 1'b1;
    end else begin
        freq_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_410_p1 = 32'd947912704;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_410_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_410_p1 = reg_433;
    end else begin
        grp_fu_410_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_414_p1 = 32'd947912704;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_414_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_414_p1 = reg_440;
    end else begin
        grp_fu_414_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_422_opcode = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_422_opcode = 5'd4;
    end else begin
        grp_fu_422_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_422_p1 = max_0_fu_108;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_422_p1 = 32'd1065353216;
    end else begin
        grp_fu_422_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        input_imag_address0 = zext_ln1751_fu_811_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        input_imag_address0 = zext_ln1747_fu_793_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        input_imag_address0 = zext_ln1744_fu_761_p1;
    end else if (((icmp_ln1738_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        input_imag_address0 = zext_ln1739_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        input_imag_address0 = input_imag_addr_1_reg_942;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_imag_address0 = zext_ln1714_fu_581_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1))) begin
        input_imag_address0 = input_imag_addr_5_gep_fu_189_p3;
    end else if (((or_ln1702_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        input_imag_address0 = zext_ln1702_reg_868;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_imag_address0 = zext_ln1682_fu_490_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_imag_address0 = grp_fft_fu_396_X_I_address0;
    end else begin
        input_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        input_imag_address1 = input_imag_addr_10_reg_1000;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        input_imag_address1 = input_imag_addr_9_reg_980;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        input_imag_address1 = input_imag_addr_4_reg_966;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        input_imag_address1 = zext_ln1731_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        input_imag_address1 = zext_ln1729_fu_690_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        input_imag_address1 = sext_ln544_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_imag_address1 = input_imag_addr_7_reg_890;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_imag_address1 = zext_ln1704_fu_534_p1;
    end else begin
        input_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18) | ((strm_in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln1738_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35)) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)) | ((or_ln1702_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_imag_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_imag_ce0 = grp_fft_fu_396_X_I_ce0;
    end else begin
        input_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6))) begin
        input_imag_ce1 = 1'b1;
    end else begin
        input_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)))) begin
        input_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_imag_d0 = bitcast_ln1681_fu_485_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_imag_d0 = grp_fft_fu_396_X_I_d0;
    end else begin
        input_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        input_imag_d1 = bitcast_ln1744_1_fu_776_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        input_imag_d1 = bitcast_ln1739_1_fu_744_p1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27))) begin
        input_imag_d1 = reg_453;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6))) begin
        input_imag_d1 = 32'd0;
    end else begin
        input_imag_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((strm_in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((1'd1 == and_ln1712_fu_575_p2) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)))) begin
        input_imag_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_imag_we0 = grp_fft_fu_396_X_I_we0;
    end else begin
        input_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27) | ((1'd1 == and_ln1712_fu_575_p2) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)))) begin
        input_imag_we1 = 1'b1;
    end else begin
        input_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        input_real_address0 = zext_ln1751_fu_811_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        input_real_address0 = zext_ln1747_fu_793_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        input_real_address0 = input_real_addr_1_reg_936;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_real_address0 = zext_ln1714_fu_581_p1;
    end else if ((((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)) | ((or_ln1702_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_real_address0 = zext_ln1702_reg_868;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_real_address0 = zext_ln1682_fu_490_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_real_address0 = grp_fft_fu_396_X_R_address0;
    end else begin
        input_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        input_real_address1 = input_real_addr_7_reg_994;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        input_real_address1 = zext_ln1731_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        input_real_address1 = zext_ln1729_fu_690_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        input_real_address1 = sext_ln544_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_real_address1 = input_real_addr_4_reg_884;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_real_address1 = zext_ln1704_fu_534_p1;
    end else begin
        input_real_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state18) | ((strm_in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)) | ((or_ln1702_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_real_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_real_ce0 = grp_fft_fu_396_X_R_ce0;
    end else begin
        input_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6))) begin
        input_real_ce1 = 1'b1;
    end else begin
        input_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)))) begin
        input_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_real_d0 = bitcast_ln1680_fu_481_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_real_d0 = grp_fft_fu_396_X_R_d0;
    end else begin
        input_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27))) begin
        input_real_d1 = reg_447;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6))) begin
        input_real_d1 = 32'd0;
    end else begin
        input_real_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((strm_in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((1'd1 == and_ln1712_fu_575_p2) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)))) begin
        input_real_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4))) begin
        input_real_we0 = grp_fft_fu_396_X_R_we0;
    end else begin
        input_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27) | ((1'd1 == and_ln1712_fu_575_p2) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1)))) begin
        input_real_we1 = 1'b1;
    end else begin
        input_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln1677_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        strm_in_V_V_blk_n = strm_in_V_V_empty_n;
    end else begin
        strm_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((strm_in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (icmp_ln1677_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        strm_in_V_V_read = 1'b1;
    end else begin
        strm_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48))) begin
        strm_out_V_V_blk_n = strm_out_V_V_full_n;
    end else begin
        strm_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((strm_out_V_V_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state49)) begin
            strm_out_V_V_din = tmp_V_1_fu_822_p1;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            strm_out_V_V_din = tmp_V_fu_817_p1;
        end else begin
            strm_out_V_V_din = 'bx;
        end
    end else begin
        strm_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state48)))) begin
        strm_out_V_V_write = 1'b1;
    end else begin
        strm_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (icmp_ln1677_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0)) & (icmp_ln1677_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((strm_in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_fft_fu_396_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1701_fu_499_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (or_ln1702_fu_528_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln1728_fu_662_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln1738_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_fft_fu_396_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((icmp_ln1743_fu_749_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state40 : begin
            if (((icmp_ln1746_fu_781_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln1750_fu_799_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln1712_fu_575_p2 = (or_ln1712_fu_569_p2 & grp_fu_422_p2);

assign and_ln1719_1_fu_631_p2 = (grp_fu_422_p2 & and_ln1719_fu_626_p2);

assign and_ln1719_fu_626_p2 = (or_ln1719_fu_620_p2 & or_ln1712_reg_903);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state2 = ((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_ignore_call2 = ((icmp_ln1677_fu_459_p2 == 1'd0) & (strm_in_V_V_empty_n == 1'b0));
end

assign bitcast_ln1680_fu_481_p1 = tmp_V_2_reg_835;

assign bitcast_ln1681_fu_485_p1 = strm_in_V_V_dout;

assign bitcast_ln1712_fu_540_p1 = max_reg_896;

assign bitcast_ln1719_fu_591_p1 = max_0_fu_108;

assign bitcast_ln1739_1_fu_744_p1 = xor_ln1739_fu_738_p2;

assign bitcast_ln1739_fu_734_p1 = input_imag_q0;

assign bitcast_ln1744_1_fu_776_p1 = xor_ln1744_fu_770_p2;

assign bitcast_ln1744_fu_766_p1 = input_imag_q0;

assign freq_V_address0 = zext_ln1702_fu_511_p1;

assign grp_fft_fu_396_ap_start = grp_fft_fu_396_ap_start_reg;

assign grp_fu_427_p2 = (shift_idex_V_1_reg_319 ^ 14'd16383);

assign i_2_fu_723_p2 = (i2_0_reg_352 + 15'd1);

assign i_3_fu_755_p2 = (i3_0_reg_363 + 15'd1);

assign i_4_fu_787_p2 = (i4_0_reg_374 + 15'd1);

assign i_5_fu_805_p2 = (i5_0_reg_385 + 15'd1);

assign i_fu_465_p2 = (i_0_reg_307 + 15'd1);

assign icmp_ln1494_fu_522_p2 = (($signed(freq_V_q0) > $signed(15'd4840)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_516_p2 = (($signed(freq_V_q0) < $signed(15'd40)) ? 1'b1 : 1'b0);

assign icmp_ln1677_fu_459_p2 = ((i_0_reg_307 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln1701_fu_499_p2 = ((shift_idex_V_1_reg_319 == 14'd8192) ? 1'b1 : 1'b0);

assign icmp_ln1712_1_fu_563_p2 = ((trunc_ln1712_fu_553_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1712_fu_557_p2 = ((tmp_fu_543_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln1719_1_fu_614_p2 = ((trunc_ln1719_fu_604_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1719_fu_608_p2 = ((tmp_6_fu_594_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln1728_fu_662_p2 = ((z_0_reg_340 == 8'd230) ? 1'b1 : 1'b0);

assign icmp_ln1738_fu_717_p2 = ((i2_0_reg_352 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln1743_fu_749_p2 = ((i3_0_reg_363 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln1746_fu_781_p2 = ((i4_0_reg_374 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln1750_fu_799_p2 = ((i5_0_reg_385 == 15'd16384) ? 1'b1 : 1'b0);

assign input_imag_addr_5_gep_fu_189_p3 = zext_ln1702_reg_868;

assign j_fu_505_p2 = (shift_idex_V_1_reg_319 + 14'd1);

assign or_ln1702_fu_528_p2 = (icmp_ln1495_fu_516_p2 | icmp_ln1494_fu_522_p2);

assign or_ln1712_fu_569_p2 = (icmp_ln1712_fu_557_p2 | icmp_ln1712_1_fu_563_p2);

assign or_ln1719_fu_620_p2 = (icmp_ln1719_fu_608_p2 | icmp_ln1719_1_fu_614_p2);

assign ret_V_fu_672_p2 = ($signed(zext_ln215_fu_668_p1) + $signed(15'd32708));

assign select_ln1719_1_fu_644_p3 = ((and_ln1719_1_fu_631_p2[0:0] === 1'b1) ? max_reg_896 : max_0_fu_108);

assign select_ln1719_fu_637_p3 = ((and_ln1719_1_fu_631_p2[0:0] === 1'b1) ? shift_idex_V_1_reg_319 : p_0205_0_load_reg_854);

assign sext_ln1731_fu_707_p1 = $signed(xor_ln1731_fu_702_p2);

assign sext_ln544_fu_678_p1 = $signed(ret_V_fu_672_p2);

assign shift_idex_V_fu_684_p2 = (t_V_reg_331 + 14'd1);

assign tmp_6_fu_594_p4 = {{bitcast_ln1719_fu_591_p1[30:23]}};

assign tmp_V_1_fu_822_p1 = reg_440;

assign tmp_V_fu_817_p1 = input_real_q0;

assign tmp_fu_543_p4 = {{bitcast_ln1712_fu_540_p1[30:23]}};

assign trunc_ln1712_fu_553_p1 = bitcast_ln1712_fu_540_p1[22:0];

assign trunc_ln1719_fu_604_p1 = bitcast_ln1719_fu_591_p1[22:0];

assign xor_ln1731_fu_702_p2 = (zext_ln1728_reg_928 ^ 9'd511);

assign xor_ln1739_fu_738_p2 = (bitcast_ln1739_fu_734_p1 ^ 32'd2147483648);

assign xor_ln1744_fu_770_p2 = (bitcast_ln1744_fu_766_p1 ^ 32'd2147483648);

assign z_fu_696_p2 = (z_0_reg_340 + 8'd1);

assign zext_ln1682_fu_490_p1 = i_0_reg_307;

assign zext_ln1702_fu_511_p1 = shift_idex_V_1_reg_319;

assign zext_ln1704_fu_534_p1 = grp_fu_427_p2;

assign zext_ln1714_fu_581_p1 = grp_fu_427_p2;

assign zext_ln1728_fu_658_p1 = z_0_reg_340;

assign zext_ln1729_fu_690_p1 = z_0_reg_340;

assign zext_ln1731_fu_711_p1 = $unsigned(sext_ln1731_fu_707_p1);

assign zext_ln1739_fu_729_p1 = i2_0_reg_352;

assign zext_ln1744_fu_761_p1 = i3_0_reg_363;

assign zext_ln1747_fu_793_p1 = i4_0_reg_374;

assign zext_ln1751_fu_811_p1 = i5_0_reg_385;

assign zext_ln215_fu_668_p1 = t_V_reg_331;

always @ (posedge ap_clk) begin
    zext_ln1702_reg_868[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln1728_reg_928[8] <= 1'b0;
end

endmodule //dut
