// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<49> dut::ap_ST_fsm_state1 = "1";
const sc_lv<49> dut::ap_ST_fsm_state2 = "10";
const sc_lv<49> dut::ap_ST_fsm_state3 = "100";
const sc_lv<49> dut::ap_ST_fsm_state4 = "1000";
const sc_lv<49> dut::ap_ST_fsm_state5 = "10000";
const sc_lv<49> dut::ap_ST_fsm_state6 = "100000";
const sc_lv<49> dut::ap_ST_fsm_state7 = "1000000";
const sc_lv<49> dut::ap_ST_fsm_state8 = "10000000";
const sc_lv<49> dut::ap_ST_fsm_state9 = "100000000";
const sc_lv<49> dut::ap_ST_fsm_state10 = "1000000000";
const sc_lv<49> dut::ap_ST_fsm_state11 = "10000000000";
const sc_lv<49> dut::ap_ST_fsm_state12 = "100000000000";
const sc_lv<49> dut::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<49> dut::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<49> dut::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<49> dut::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<49> dut::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_1 = "1";
const sc_lv<1> dut::ap_const_lv1_0 = "0";
const sc_lv<32> dut::ap_const_lv32_2 = "10";
const sc_lv<32> dut::ap_const_lv32_2F = "101111";
const sc_lv<32> dut::ap_const_lv32_30 = "110000";
const sc_lv<32> dut::ap_const_lv32_6 = "110";
const sc_lv<32> dut::ap_const_lv32_15 = "10101";
const sc_lv<32> dut::ap_const_lv32_1C = "11100";
const sc_lv<32> dut::ap_const_lv32_28 = "101000";
const sc_lv<32> dut::ap_const_lv32_A = "1010";
const sc_lv<32> dut::ap_const_lv32_19 = "11001";
const sc_lv<32> dut::ap_const_lv32_20 = "100000";
const sc_lv<32> dut::ap_const_lv32_2C = "101100";
const sc_lv<32> dut::ap_const_lv32_4 = "100";
const sc_lv<32> dut::ap_const_lv32_5 = "101";
const sc_lv<32> dut::ap_const_lv32_F = "1111";
const sc_lv<32> dut::ap_const_lv32_11 = "10001";
const sc_lv<32> dut::ap_const_lv32_12 = "10010";
const sc_lv<32> dut::ap_const_lv32_14 = "10100";
const sc_lv<32> dut::ap_const_lv32_1A = "11010";
const sc_lv<32> dut::ap_const_lv32_22 = "100010";
const sc_lv<32> dut::ap_const_lv32_25 = "100101";
const sc_lv<32> dut::ap_const_lv32_27 = "100111";
const sc_lv<32> dut::ap_const_lv32_2E = "101110";
const sc_lv<15> dut::ap_const_lv15_0 = "000000000000000";
const sc_lv<14> dut::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> dut::ap_const_lv32_3 = "11";
const sc_lv<32> dut::ap_const_lv32_13 = "10011";
const sc_lv<32> dut::ap_const_lv32_21 = "100001";
const sc_lv<1> dut::ap_const_lv1_1 = "1";
const sc_lv<8> dut::ap_const_lv8_6E = "1101110";
const sc_lv<32> dut::ap_const_lv32_23 = "100011";
const sc_lv<32> dut::ap_const_lv32_24 = "100100";
const sc_lv<32> dut::ap_const_lv32_26 = "100110";
const sc_lv<32> dut::ap_const_lv32_2D = "101101";
const sc_lv<32> dut::ap_const_lv32_1B = "11011";
const sc_lv<32> dut::ap_const_lv32_B = "1011";
const sc_lv<32> dut::ap_const_lv32_40000000 = "1000000000000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_38800000 = "111000100000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_7 = "111";
const sc_lv<32> dut::ap_const_lv32_16 = "10110";
const sc_lv<32> dut::ap_const_lv32_1D = "11101";
const sc_lv<32> dut::ap_const_lv32_29 = "101001";
const sc_lv<32> dut::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_10 = "10000";
const sc_lv<14> dut::ap_const_lv14_3FFF = "11111111111111";
const sc_lv<15> dut::ap_const_lv15_4000 = "100000000000000";
const sc_lv<15> dut::ap_const_lv15_1 = "1";
const sc_lv<14> dut::ap_const_lv14_2000 = "10000000000000";
const sc_lv<14> dut::ap_const_lv14_1 = "1";
const sc_lv<15> dut::ap_const_lv15_28 = "101000";
const sc_lv<15> dut::ap_const_lv15_12E8 = "1001011101000";
const sc_lv<32> dut::ap_const_lv32_17 = "10111";
const sc_lv<32> dut::ap_const_lv32_1E = "11110";
const sc_lv<8> dut::ap_const_lv8_FF = "11111111";
const sc_lv<23> dut::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<8> dut::ap_const_lv8_E6 = "11100110";
const sc_lv<15> dut::ap_const_lv15_7FC4 = "111111111000100";
const sc_lv<8> dut::ap_const_lv8_1 = "1";
const sc_lv<9> dut::ap_const_lv9_1FF = "111111111";
const sc_lv<32> dut::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<5> dut::ap_const_lv5_4 = "100";
const sc_lv<5> dut::ap_const_lv5_2 = "10";
const bool dut::ap_const_boolean_1 = true;

dut::dut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    freq_V_U = new dut_freq_V("freq_V_U");
    freq_V_U->clk(ap_clk);
    freq_V_U->reset(ap_rst);
    freq_V_U->address0(freq_V_address0);
    freq_V_U->ce0(freq_V_ce0);
    freq_V_U->q0(freq_V_q0);
    input_real_U = new dut_input_real("input_real_U");
    input_real_U->clk(ap_clk);
    input_real_U->reset(ap_rst);
    input_real_U->address0(input_real_address0);
    input_real_U->ce0(input_real_ce0);
    input_real_U->we0(input_real_we0);
    input_real_U->d0(input_real_d0);
    input_real_U->q0(input_real_q0);
    input_real_U->address1(input_real_address1);
    input_real_U->ce1(input_real_ce1);
    input_real_U->we1(input_real_we1);
    input_real_U->d1(input_real_d1);
    input_real_U->q1(input_real_q1);
    input_imag_U = new dut_input_real("input_imag_U");
    input_imag_U->clk(ap_clk);
    input_imag_U->reset(ap_rst);
    input_imag_U->address0(input_imag_address0);
    input_imag_U->ce0(input_imag_ce0);
    input_imag_U->we0(input_imag_we0);
    input_imag_U->d0(input_imag_d0);
    input_imag_U->q0(input_imag_q0);
    input_imag_U->address1(input_imag_address1);
    input_imag_U->ce1(input_imag_ce1);
    input_imag_U->we1(input_imag_we1);
    input_imag_U->d1(input_imag_d1);
    input_imag_U->q1(input_imag_q1);
    grp_fft_fu_396 = new fft("grp_fft_fu_396");
    grp_fft_fu_396->ap_clk(ap_clk);
    grp_fft_fu_396->ap_rst(ap_rst);
    grp_fft_fu_396->ap_start(grp_fft_fu_396_ap_start);
    grp_fft_fu_396->ap_done(grp_fft_fu_396_ap_done);
    grp_fft_fu_396->ap_idle(grp_fft_fu_396_ap_idle);
    grp_fft_fu_396->ap_ready(grp_fft_fu_396_ap_ready);
    grp_fft_fu_396->X_R_address0(grp_fft_fu_396_X_R_address0);
    grp_fft_fu_396->X_R_ce0(grp_fft_fu_396_X_R_ce0);
    grp_fft_fu_396->X_R_we0(grp_fft_fu_396_X_R_we0);
    grp_fft_fu_396->X_R_d0(grp_fft_fu_396_X_R_d0);
    grp_fft_fu_396->X_R_q0(input_real_q0);
    grp_fft_fu_396->X_I_address0(grp_fft_fu_396_X_I_address0);
    grp_fft_fu_396->X_I_ce0(grp_fft_fu_396_X_I_ce0);
    grp_fft_fu_396->X_I_we0(grp_fft_fu_396_X_I_we0);
    grp_fft_fu_396->X_I_d0(grp_fft_fu_396_X_I_d0);
    grp_fft_fu_396->X_I_q0(input_imag_q0);
    dut_fadd_32ns_32ng8j_U18 = new dut_fadd_32ns_32ng8j<1,5,32,32,32>("dut_fadd_32ns_32ng8j_U18");
    dut_fadd_32ns_32ng8j_U18->clk(ap_clk);
    dut_fadd_32ns_32ng8j_U18->reset(ap_rst);
    dut_fadd_32ns_32ng8j_U18->din0(reg_447);
    dut_fadd_32ns_32ng8j_U18->din1(reg_453);
    dut_fadd_32ns_32ng8j_U18->ce(ap_var_for_const0);
    dut_fadd_32ns_32ng8j_U18->dout(grp_fu_406_p2);
    dut_fmul_32ns_32neOg_U19 = new dut_fmul_32ns_32neOg<1,4,32,32,32>("dut_fmul_32ns_32neOg_U19");
    dut_fmul_32ns_32neOg_U19->clk(ap_clk);
    dut_fmul_32ns_32neOg_U19->reset(ap_rst);
    dut_fmul_32ns_32neOg_U19->din0(reg_433);
    dut_fmul_32ns_32neOg_U19->din1(grp_fu_410_p1);
    dut_fmul_32ns_32neOg_U19->ce(ap_var_for_const0);
    dut_fmul_32ns_32neOg_U19->dout(grp_fu_410_p2);
    dut_fmul_32ns_32neOg_U20 = new dut_fmul_32ns_32neOg<1,4,32,32,32>("dut_fmul_32ns_32neOg_U20");
    dut_fmul_32ns_32neOg_U20->clk(ap_clk);
    dut_fmul_32ns_32neOg_U20->reset(ap_rst);
    dut_fmul_32ns_32neOg_U20->din0(reg_440);
    dut_fmul_32ns_32neOg_U20->din1(grp_fu_414_p1);
    dut_fmul_32ns_32neOg_U20->ce(ap_var_for_const0);
    dut_fmul_32ns_32neOg_U20->dout(grp_fu_414_p2);
    dut_fcmp_32ns_32nhbi_U21 = new dut_fcmp_32ns_32nhbi<1,2,32,32,1>("dut_fcmp_32ns_32nhbi_U21");
    dut_fcmp_32ns_32nhbi_U21->clk(ap_clk);
    dut_fcmp_32ns_32nhbi_U21->reset(ap_rst);
    dut_fcmp_32ns_32nhbi_U21->din0(max_reg_896);
    dut_fcmp_32ns_32nhbi_U21->din1(grp_fu_422_p1);
    dut_fcmp_32ns_32nhbi_U21->ce(ap_var_for_const0);
    dut_fcmp_32ns_32nhbi_U21->opcode(grp_fu_422_opcode);
    dut_fcmp_32ns_32nhbi_U21->dout(grp_fu_422_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln1712_fu_575_p2);
    sensitive << ( or_ln1712_fu_569_p2 );
    sensitive << ( grp_fu_422_p2 );

    SC_METHOD(thread_and_ln1719_1_fu_631_p2);
    sensitive << ( grp_fu_422_p2 );
    sensitive << ( and_ln1719_fu_626_p2 );

    SC_METHOD(thread_and_ln1719_fu_626_p2);
    sensitive << ( or_ln1712_reg_903 );
    sensitive << ( or_ln1719_fu_620_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( icmp_ln1677_fu_459_p2 );

    SC_METHOD(thread_ap_block_state2_ignore_call2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( icmp_ln1677_fu_459_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( icmp_ln1750_fu_799_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( icmp_ln1750_fu_799_p2 );

    SC_METHOD(thread_bitcast_ln1680_fu_481_p1);
    sensitive << ( tmp_V_2_reg_835 );

    SC_METHOD(thread_bitcast_ln1681_fu_485_p1);
    sensitive << ( strm_in_V_V_dout );

    SC_METHOD(thread_bitcast_ln1712_fu_540_p1);
    sensitive << ( max_reg_896 );

    SC_METHOD(thread_bitcast_ln1719_fu_591_p1);
    sensitive << ( max_0_fu_108 );

    SC_METHOD(thread_bitcast_ln1739_1_fu_744_p1);
    sensitive << ( xor_ln1739_fu_738_p2 );

    SC_METHOD(thread_bitcast_ln1739_fu_734_p1);
    sensitive << ( input_imag_q0 );

    SC_METHOD(thread_bitcast_ln1744_1_fu_776_p1);
    sensitive << ( xor_ln1744_fu_770_p2 );

    SC_METHOD(thread_bitcast_ln1744_fu_766_p1);
    sensitive << ( input_imag_q0 );

    SC_METHOD(thread_freq_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln1702_fu_511_p1 );

    SC_METHOD(thread_freq_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fft_fu_396_ap_start);
    sensitive << ( grp_fft_fu_396_ap_start_reg );

    SC_METHOD(thread_grp_fu_410_p1);
    sensitive << ( reg_433 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_414_p1);
    sensitive << ( reg_440 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_422_opcode);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_422_p1);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( max_0_fu_108 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_427_p2);
    sensitive << ( shift_idex_V_1_reg_319 );

    SC_METHOD(thread_i_2_fu_723_p2);
    sensitive << ( i2_0_reg_352 );

    SC_METHOD(thread_i_3_fu_755_p2);
    sensitive << ( i3_0_reg_363 );

    SC_METHOD(thread_i_4_fu_787_p2);
    sensitive << ( i4_0_reg_374 );

    SC_METHOD(thread_i_5_fu_805_p2);
    sensitive << ( i5_0_reg_385 );

    SC_METHOD(thread_i_fu_465_p2);
    sensitive << ( i_0_reg_307 );

    SC_METHOD(thread_icmp_ln1494_fu_522_p2);
    sensitive << ( freq_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln1495_fu_516_p2);
    sensitive << ( freq_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln1677_fu_459_p2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln1677_fu_459_p2 );
    sensitive << ( i_0_reg_307 );

    SC_METHOD(thread_icmp_ln1701_fu_499_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( shift_idex_V_1_reg_319 );

    SC_METHOD(thread_icmp_ln1712_1_fu_563_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( trunc_ln1712_fu_553_p1 );

    SC_METHOD(thread_icmp_ln1712_fu_557_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_fu_543_p4 );

    SC_METHOD(thread_icmp_ln1719_1_fu_614_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( trunc_ln1719_fu_604_p1 );

    SC_METHOD(thread_icmp_ln1719_fu_608_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_6_fu_594_p4 );

    SC_METHOD(thread_icmp_ln1728_fu_662_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( z_0_reg_340 );

    SC_METHOD(thread_icmp_ln1738_fu_717_p2);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( i2_0_reg_352 );

    SC_METHOD(thread_icmp_ln1743_fu_749_p2);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( i3_0_reg_363 );

    SC_METHOD(thread_icmp_ln1746_fu_781_p2);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( i4_0_reg_374 );

    SC_METHOD(thread_icmp_ln1750_fu_799_p2);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( i5_0_reg_385 );

    SC_METHOD(thread_input_imag_addr_5_gep_fu_189_p3);
    sensitive << ( zext_ln1702_reg_868 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_input_imag_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1702_reg_868 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( input_imag_addr_1_reg_942 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( icmp_ln1738_fu_717_p2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fft_fu_396_X_I_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( zext_ln1682_fu_490_p1 );
    sensitive << ( input_imag_addr_5_gep_fu_189_p3 );
    sensitive << ( zext_ln1714_fu_581_p1 );
    sensitive << ( zext_ln1739_fu_729_p1 );
    sensitive << ( zext_ln1744_fu_761_p1 );
    sensitive << ( zext_ln1747_fu_793_p1 );
    sensitive << ( zext_ln1751_fu_811_p1 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_input_imag_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( input_imag_addr_7_reg_890 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( input_imag_addr_4_reg_966 );
    sensitive << ( input_imag_addr_9_reg_980 );
    sensitive << ( input_imag_addr_10_reg_1000 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( zext_ln1704_fu_534_p1 );
    sensitive << ( sext_ln544_fu_678_p1 );
    sensitive << ( zext_ln1729_fu_690_p1 );
    sensitive << ( zext_ln1731_fu_711_p1 );

    SC_METHOD(thread_input_imag_ce0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( icmp_ln1738_fu_717_p2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fft_fu_396_X_I_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_input_imag_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_input_imag_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_fft_fu_396_X_I_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( bitcast_ln1681_fu_485_p1 );

    SC_METHOD(thread_input_imag_d1);
    sensitive << ( reg_453 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( bitcast_ln1739_1_fu_744_p1 );
    sensitive << ( bitcast_ln1744_1_fu_776_p1 );

    SC_METHOD(thread_input_imag_we0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_fft_fu_396_X_I_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( and_ln1712_fu_575_p2 );

    SC_METHOD(thread_input_imag_we1);
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( and_ln1712_fu_575_p2 );

    SC_METHOD(thread_input_real_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1702_reg_868 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( input_real_addr_1_reg_936 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fft_fu_396_X_R_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( zext_ln1682_fu_490_p1 );
    sensitive << ( zext_ln1714_fu_581_p1 );
    sensitive << ( zext_ln1747_fu_793_p1 );
    sensitive << ( zext_ln1751_fu_811_p1 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_input_real_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( input_real_addr_4_reg_884 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( input_real_addr_7_reg_994 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( zext_ln1704_fu_534_p1 );
    sensitive << ( sext_ln544_fu_678_p1 );
    sensitive << ( zext_ln1729_fu_690_p1 );
    sensitive << ( zext_ln1731_fu_711_p1 );

    SC_METHOD(thread_input_real_ce0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fft_fu_396_X_R_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_input_real_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_input_real_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_fft_fu_396_X_R_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( bitcast_ln1680_fu_481_p1 );

    SC_METHOD(thread_input_real_d1);
    sensitive << ( reg_447 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_input_real_we0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_fft_fu_396_X_R_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( and_ln1712_fu_575_p2 );

    SC_METHOD(thread_input_real_we1);
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( and_ln1712_fu_575_p2 );

    SC_METHOD(thread_j_fu_505_p2);
    sensitive << ( shift_idex_V_1_reg_319 );

    SC_METHOD(thread_or_ln1702_fu_528_p2);
    sensitive << ( icmp_ln1495_fu_516_p2 );
    sensitive << ( icmp_ln1494_fu_522_p2 );

    SC_METHOD(thread_or_ln1712_fu_569_p2);
    sensitive << ( icmp_ln1712_1_fu_563_p2 );
    sensitive << ( icmp_ln1712_fu_557_p2 );

    SC_METHOD(thread_or_ln1719_fu_620_p2);
    sensitive << ( icmp_ln1719_1_fu_614_p2 );
    sensitive << ( icmp_ln1719_fu_608_p2 );

    SC_METHOD(thread_ret_V_fu_672_p2);
    sensitive << ( zext_ln215_fu_668_p1 );

    SC_METHOD(thread_select_ln1719_1_fu_644_p3);
    sensitive << ( max_reg_896 );
    sensitive << ( max_0_fu_108 );
    sensitive << ( and_ln1719_1_fu_631_p2 );

    SC_METHOD(thread_select_ln1719_fu_637_p3);
    sensitive << ( p_0205_0_load_reg_854 );
    sensitive << ( shift_idex_V_1_reg_319 );
    sensitive << ( and_ln1719_1_fu_631_p2 );

    SC_METHOD(thread_sext_ln1731_fu_707_p1);
    sensitive << ( xor_ln1731_fu_702_p2 );

    SC_METHOD(thread_sext_ln544_fu_678_p1);
    sensitive << ( ret_V_fu_672_p2 );

    SC_METHOD(thread_shift_idex_V_fu_684_p2);
    sensitive << ( t_V_reg_331 );

    SC_METHOD(thread_strm_in_V_V_blk_n);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln1677_fu_459_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_strm_in_V_V_read);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln1677_fu_459_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_strm_out_V_V_blk_n);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_strm_out_V_V_din);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( tmp_V_fu_817_p1 );
    sensitive << ( tmp_V_1_fu_822_p1 );

    SC_METHOD(thread_strm_out_V_V_write);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_tmp_6_fu_594_p4);
    sensitive << ( bitcast_ln1719_fu_591_p1 );

    SC_METHOD(thread_tmp_V_1_fu_822_p1);
    sensitive << ( reg_440 );

    SC_METHOD(thread_tmp_V_fu_817_p1);
    sensitive << ( input_real_q0 );

    SC_METHOD(thread_tmp_fu_543_p4);
    sensitive << ( bitcast_ln1712_fu_540_p1 );

    SC_METHOD(thread_trunc_ln1712_fu_553_p1);
    sensitive << ( bitcast_ln1712_fu_540_p1 );

    SC_METHOD(thread_trunc_ln1719_fu_604_p1);
    sensitive << ( bitcast_ln1719_fu_591_p1 );

    SC_METHOD(thread_xor_ln1731_fu_702_p2);
    sensitive << ( zext_ln1728_reg_928 );

    SC_METHOD(thread_xor_ln1739_fu_738_p2);
    sensitive << ( bitcast_ln1739_fu_734_p1 );

    SC_METHOD(thread_xor_ln1744_fu_770_p2);
    sensitive << ( bitcast_ln1744_fu_766_p1 );

    SC_METHOD(thread_z_fu_696_p2);
    sensitive << ( z_0_reg_340 );

    SC_METHOD(thread_zext_ln1682_fu_490_p1);
    sensitive << ( i_0_reg_307 );

    SC_METHOD(thread_zext_ln1702_fu_511_p1);
    sensitive << ( shift_idex_V_1_reg_319 );

    SC_METHOD(thread_zext_ln1704_fu_534_p1);
    sensitive << ( grp_fu_427_p2 );

    SC_METHOD(thread_zext_ln1714_fu_581_p1);
    sensitive << ( grp_fu_427_p2 );

    SC_METHOD(thread_zext_ln1728_fu_658_p1);
    sensitive << ( z_0_reg_340 );

    SC_METHOD(thread_zext_ln1729_fu_690_p1);
    sensitive << ( z_0_reg_340 );

    SC_METHOD(thread_zext_ln1731_fu_711_p1);
    sensitive << ( sext_ln1731_fu_707_p1 );

    SC_METHOD(thread_zext_ln1739_fu_729_p1);
    sensitive << ( i2_0_reg_352 );

    SC_METHOD(thread_zext_ln1744_fu_761_p1);
    sensitive << ( i3_0_reg_363 );

    SC_METHOD(thread_zext_ln1747_fu_793_p1);
    sensitive << ( i4_0_reg_374 );

    SC_METHOD(thread_zext_ln1751_fu_811_p1);
    sensitive << ( i5_0_reg_385 );

    SC_METHOD(thread_zext_ln215_fu_668_p1);
    sensitive << ( t_V_reg_331 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln1677_fu_459_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln1701_fu_499_p2 );
    sensitive << ( or_ln1702_fu_528_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln1728_fu_662_p2 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( icmp_ln1738_fu_717_p2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( icmp_ln1743_fu_749_p2 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( icmp_ln1746_fu_781_p2 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( icmp_ln1750_fu_799_p2 );
    sensitive << ( grp_fft_fu_396_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000001";
    grp_fft_fu_396_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, strm_in_V_V_dout, "(port)strm_in_V_V_dout");
    sc_trace(mVcdFile, strm_in_V_V_empty_n, "(port)strm_in_V_V_empty_n");
    sc_trace(mVcdFile, strm_in_V_V_read, "(port)strm_in_V_V_read");
    sc_trace(mVcdFile, strm_out_V_V_din, "(port)strm_out_V_V_din");
    sc_trace(mVcdFile, strm_out_V_V_full_n, "(port)strm_out_V_V_full_n");
    sc_trace(mVcdFile, strm_out_V_V_write, "(port)strm_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, freq_V_address0, "freq_V_address0");
    sc_trace(mVcdFile, freq_V_ce0, "freq_V_ce0");
    sc_trace(mVcdFile, freq_V_q0, "freq_V_q0");
    sc_trace(mVcdFile, strm_in_V_V_blk_n, "strm_in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln1677_fu_459_p2, "icmp_ln1677_fu_459_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, strm_out_V_V_blk_n, "strm_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, input_real_q0, "input_real_q0");
    sc_trace(mVcdFile, reg_433, "reg_433");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_real_q1, "input_real_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, input_imag_q0, "input_imag_q0");
    sc_trace(mVcdFile, reg_440, "reg_440");
    sc_trace(mVcdFile, input_imag_q1, "input_imag_q1");
    sc_trace(mVcdFile, grp_fu_410_p2, "grp_fu_410_p2");
    sc_trace(mVcdFile, reg_447, "reg_447");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, grp_fu_414_p2, "grp_fu_414_p2");
    sc_trace(mVcdFile, reg_453, "reg_453");
    sc_trace(mVcdFile, i_fu_465_p2, "i_fu_465_p2");
    sc_trace(mVcdFile, i_reg_830, "i_reg_830");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_V_2_reg_835, "tmp_V_2_reg_835");
    sc_trace(mVcdFile, p_0205_0_load_reg_854, "p_0205_0_load_reg_854");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, j_fu_505_p2, "j_fu_505_p2");
    sc_trace(mVcdFile, j_reg_863, "j_reg_863");
    sc_trace(mVcdFile, zext_ln1702_fu_511_p1, "zext_ln1702_fu_511_p1");
    sc_trace(mVcdFile, zext_ln1702_reg_868, "zext_ln1702_reg_868");
    sc_trace(mVcdFile, icmp_ln1701_fu_499_p2, "icmp_ln1701_fu_499_p2");
    sc_trace(mVcdFile, or_ln1702_fu_528_p2, "or_ln1702_fu_528_p2");
    sc_trace(mVcdFile, or_ln1702_reg_880, "or_ln1702_reg_880");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, input_real_addr_4_reg_884, "input_real_addr_4_reg_884");
    sc_trace(mVcdFile, input_imag_addr_7_reg_890, "input_imag_addr_7_reg_890");
    sc_trace(mVcdFile, grp_fu_406_p2, "grp_fu_406_p2");
    sc_trace(mVcdFile, max_reg_896, "max_reg_896");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, or_ln1712_fu_569_p2, "or_ln1712_fu_569_p2");
    sc_trace(mVcdFile, or_ln1712_reg_903, "or_ln1712_reg_903");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, select_ln1719_fu_637_p3, "select_ln1719_fu_637_p3");
    sc_trace(mVcdFile, select_ln1719_reg_918, "select_ln1719_reg_918");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, select_ln1719_1_fu_644_p3, "select_ln1719_1_fu_644_p3");
    sc_trace(mVcdFile, select_ln1719_1_reg_923, "select_ln1719_1_reg_923");
    sc_trace(mVcdFile, zext_ln1728_fu_658_p1, "zext_ln1728_fu_658_p1");
    sc_trace(mVcdFile, zext_ln1728_reg_928, "zext_ln1728_reg_928");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, input_real_addr_1_reg_936, "input_real_addr_1_reg_936");
    sc_trace(mVcdFile, icmp_ln1728_fu_662_p2, "icmp_ln1728_fu_662_p2");
    sc_trace(mVcdFile, input_imag_addr_1_reg_942, "input_imag_addr_1_reg_942");
    sc_trace(mVcdFile, shift_idex_V_fu_684_p2, "shift_idex_V_fu_684_p2");
    sc_trace(mVcdFile, shift_idex_V_reg_948, "shift_idex_V_reg_948");
    sc_trace(mVcdFile, z_fu_696_p2, "z_fu_696_p2");
    sc_trace(mVcdFile, z_reg_953, "z_reg_953");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, i_2_fu_723_p2, "i_2_fu_723_p2");
    sc_trace(mVcdFile, i_2_reg_961, "i_2_reg_961");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, input_imag_addr_4_reg_966, "input_imag_addr_4_reg_966");
    sc_trace(mVcdFile, icmp_ln1738_fu_717_p2, "icmp_ln1738_fu_717_p2");
    sc_trace(mVcdFile, i_3_fu_755_p2, "i_3_fu_755_p2");
    sc_trace(mVcdFile, i_3_reg_975, "i_3_reg_975");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, input_imag_addr_9_reg_980, "input_imag_addr_9_reg_980");
    sc_trace(mVcdFile, icmp_ln1743_fu_749_p2, "icmp_ln1743_fu_749_p2");
    sc_trace(mVcdFile, i_4_fu_787_p2, "i_4_fu_787_p2");
    sc_trace(mVcdFile, i_4_reg_989, "i_4_reg_989");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, input_real_addr_7_reg_994, "input_real_addr_7_reg_994");
    sc_trace(mVcdFile, icmp_ln1746_fu_781_p2, "icmp_ln1746_fu_781_p2");
    sc_trace(mVcdFile, input_imag_addr_10_reg_1000, "input_imag_addr_10_reg_1000");
    sc_trace(mVcdFile, i_5_fu_805_p2, "i_5_fu_805_p2");
    sc_trace(mVcdFile, i_5_reg_1009, "i_5_reg_1009");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, icmp_ln1750_fu_799_p2, "icmp_ln1750_fu_799_p2");
    sc_trace(mVcdFile, input_real_address0, "input_real_address0");
    sc_trace(mVcdFile, input_real_ce0, "input_real_ce0");
    sc_trace(mVcdFile, input_real_we0, "input_real_we0");
    sc_trace(mVcdFile, input_real_d0, "input_real_d0");
    sc_trace(mVcdFile, input_real_address1, "input_real_address1");
    sc_trace(mVcdFile, input_real_ce1, "input_real_ce1");
    sc_trace(mVcdFile, input_real_we1, "input_real_we1");
    sc_trace(mVcdFile, input_real_d1, "input_real_d1");
    sc_trace(mVcdFile, input_imag_address0, "input_imag_address0");
    sc_trace(mVcdFile, input_imag_ce0, "input_imag_ce0");
    sc_trace(mVcdFile, input_imag_we0, "input_imag_we0");
    sc_trace(mVcdFile, input_imag_d0, "input_imag_d0");
    sc_trace(mVcdFile, input_imag_address1, "input_imag_address1");
    sc_trace(mVcdFile, input_imag_ce1, "input_imag_ce1");
    sc_trace(mVcdFile, input_imag_we1, "input_imag_we1");
    sc_trace(mVcdFile, input_imag_d1, "input_imag_d1");
    sc_trace(mVcdFile, grp_fft_fu_396_ap_start, "grp_fft_fu_396_ap_start");
    sc_trace(mVcdFile, grp_fft_fu_396_ap_done, "grp_fft_fu_396_ap_done");
    sc_trace(mVcdFile, grp_fft_fu_396_ap_idle, "grp_fft_fu_396_ap_idle");
    sc_trace(mVcdFile, grp_fft_fu_396_ap_ready, "grp_fft_fu_396_ap_ready");
    sc_trace(mVcdFile, grp_fft_fu_396_X_R_address0, "grp_fft_fu_396_X_R_address0");
    sc_trace(mVcdFile, grp_fft_fu_396_X_R_ce0, "grp_fft_fu_396_X_R_ce0");
    sc_trace(mVcdFile, grp_fft_fu_396_X_R_we0, "grp_fft_fu_396_X_R_we0");
    sc_trace(mVcdFile, grp_fft_fu_396_X_R_d0, "grp_fft_fu_396_X_R_d0");
    sc_trace(mVcdFile, grp_fft_fu_396_X_I_address0, "grp_fft_fu_396_X_I_address0");
    sc_trace(mVcdFile, grp_fft_fu_396_X_I_ce0, "grp_fft_fu_396_X_I_ce0");
    sc_trace(mVcdFile, grp_fft_fu_396_X_I_we0, "grp_fft_fu_396_X_I_we0");
    sc_trace(mVcdFile, grp_fft_fu_396_X_I_d0, "grp_fft_fu_396_X_I_d0");
    sc_trace(mVcdFile, i_0_reg_307, "i_0_reg_307");
    sc_trace(mVcdFile, shift_idex_V_1_reg_319, "shift_idex_V_1_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, t_V_reg_331, "t_V_reg_331");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, z_0_reg_340, "z_0_reg_340");
    sc_trace(mVcdFile, i2_0_reg_352, "i2_0_reg_352");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, i3_0_reg_363, "i3_0_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, i4_0_reg_374, "i4_0_reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, i5_0_reg_385, "i5_0_reg_385");
    sc_trace(mVcdFile, grp_fft_fu_396_ap_start_reg, "grp_fft_fu_396_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_ignore_call2, "ap_block_state2_ignore_call2");
    sc_trace(mVcdFile, zext_ln1682_fu_490_p1, "zext_ln1682_fu_490_p1");
    sc_trace(mVcdFile, zext_ln1704_fu_534_p1, "zext_ln1704_fu_534_p1");
    sc_trace(mVcdFile, input_imag_addr_5_gep_fu_189_p3, "input_imag_addr_5_gep_fu_189_p3");
    sc_trace(mVcdFile, zext_ln1714_fu_581_p1, "zext_ln1714_fu_581_p1");
    sc_trace(mVcdFile, and_ln1712_fu_575_p2, "and_ln1712_fu_575_p2");
    sc_trace(mVcdFile, sext_ln544_fu_678_p1, "sext_ln544_fu_678_p1");
    sc_trace(mVcdFile, zext_ln1729_fu_690_p1, "zext_ln1729_fu_690_p1");
    sc_trace(mVcdFile, zext_ln1731_fu_711_p1, "zext_ln1731_fu_711_p1");
    sc_trace(mVcdFile, zext_ln1739_fu_729_p1, "zext_ln1739_fu_729_p1");
    sc_trace(mVcdFile, zext_ln1744_fu_761_p1, "zext_ln1744_fu_761_p1");
    sc_trace(mVcdFile, zext_ln1747_fu_793_p1, "zext_ln1747_fu_793_p1");
    sc_trace(mVcdFile, zext_ln1751_fu_811_p1, "zext_ln1751_fu_811_p1");
    sc_trace(mVcdFile, p_0205_0_fu_104, "p_0205_0_fu_104");
    sc_trace(mVcdFile, max_0_fu_108, "max_0_fu_108");
    sc_trace(mVcdFile, tmp_V_fu_817_p1, "tmp_V_fu_817_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_822_p1, "tmp_V_1_fu_822_p1");
    sc_trace(mVcdFile, bitcast_ln1680_fu_481_p1, "bitcast_ln1680_fu_481_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, bitcast_ln1681_fu_485_p1, "bitcast_ln1681_fu_485_p1");
    sc_trace(mVcdFile, bitcast_ln1739_1_fu_744_p1, "bitcast_ln1739_1_fu_744_p1");
    sc_trace(mVcdFile, bitcast_ln1744_1_fu_776_p1, "bitcast_ln1744_1_fu_776_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_410_p1, "grp_fu_410_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, grp_fu_414_p1, "grp_fu_414_p1");
    sc_trace(mVcdFile, grp_fu_422_p1, "grp_fu_422_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, icmp_ln1495_fu_516_p2, "icmp_ln1495_fu_516_p2");
    sc_trace(mVcdFile, icmp_ln1494_fu_522_p2, "icmp_ln1494_fu_522_p2");
    sc_trace(mVcdFile, grp_fu_427_p2, "grp_fu_427_p2");
    sc_trace(mVcdFile, bitcast_ln1712_fu_540_p1, "bitcast_ln1712_fu_540_p1");
    sc_trace(mVcdFile, tmp_fu_543_p4, "tmp_fu_543_p4");
    sc_trace(mVcdFile, trunc_ln1712_fu_553_p1, "trunc_ln1712_fu_553_p1");
    sc_trace(mVcdFile, icmp_ln1712_1_fu_563_p2, "icmp_ln1712_1_fu_563_p2");
    sc_trace(mVcdFile, icmp_ln1712_fu_557_p2, "icmp_ln1712_fu_557_p2");
    sc_trace(mVcdFile, grp_fu_422_p2, "grp_fu_422_p2");
    sc_trace(mVcdFile, bitcast_ln1719_fu_591_p1, "bitcast_ln1719_fu_591_p1");
    sc_trace(mVcdFile, tmp_6_fu_594_p4, "tmp_6_fu_594_p4");
    sc_trace(mVcdFile, trunc_ln1719_fu_604_p1, "trunc_ln1719_fu_604_p1");
    sc_trace(mVcdFile, icmp_ln1719_1_fu_614_p2, "icmp_ln1719_1_fu_614_p2");
    sc_trace(mVcdFile, icmp_ln1719_fu_608_p2, "icmp_ln1719_fu_608_p2");
    sc_trace(mVcdFile, or_ln1719_fu_620_p2, "or_ln1719_fu_620_p2");
    sc_trace(mVcdFile, and_ln1719_fu_626_p2, "and_ln1719_fu_626_p2");
    sc_trace(mVcdFile, and_ln1719_1_fu_631_p2, "and_ln1719_1_fu_631_p2");
    sc_trace(mVcdFile, zext_ln215_fu_668_p1, "zext_ln215_fu_668_p1");
    sc_trace(mVcdFile, ret_V_fu_672_p2, "ret_V_fu_672_p2");
    sc_trace(mVcdFile, xor_ln1731_fu_702_p2, "xor_ln1731_fu_702_p2");
    sc_trace(mVcdFile, sext_ln1731_fu_707_p1, "sext_ln1731_fu_707_p1");
    sc_trace(mVcdFile, bitcast_ln1739_fu_734_p1, "bitcast_ln1739_fu_734_p1");
    sc_trace(mVcdFile, xor_ln1739_fu_738_p2, "xor_ln1739_fu_738_p2");
    sc_trace(mVcdFile, bitcast_ln1744_fu_766_p1, "bitcast_ln1744_fu_766_p1");
    sc_trace(mVcdFile, xor_ln1744_fu_770_p2, "xor_ln1744_fu_770_p2");
    sc_trace(mVcdFile, grp_fu_422_opcode, "grp_fu_422_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dut.hdltvin.dat");
    mHdltvoutHandle.open("dut.hdltvout.dat");
}

dut::~dut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete freq_V_U;
    delete input_real_U;
    delete input_imag_U;
    delete grp_fft_fu_396;
    delete dut_fadd_32ns_32ng8j_U18;
    delete dut_fmul_32ns_32neOg_U19;
    delete dut_fmul_32ns_32neOg_U20;
    delete dut_fcmp_32ns_32nhbi_U21;
}

void dut::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dut::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_fft_fu_396_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())) && 
              esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
              esl_seteq<1,1,1>(icmp_ln1738_fu_717_p2.read(), ap_const_lv1_1)))) {
            grp_fft_fu_396_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_fft_fu_396_ap_ready.read())) {
            grp_fft_fu_396_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(icmp_ln1728_fu_662_p2.read(), ap_const_lv1_1))) {
        i2_0_reg_352 = ap_const_lv15_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        i2_0_reg_352 = i_2_reg_961.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        i3_0_reg_363 = i_3_reg_975.read();
    } else if ((esl_seteq<1,1,1>(grp_fft_fu_396_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        i3_0_reg_363 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
         esl_seteq<1,1,1>(icmp_ln1743_fu_749_p2.read(), ap_const_lv1_1))) {
        i4_0_reg_374 = ap_const_lv15_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        i4_0_reg_374 = i_4_reg_989.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(icmp_ln1746_fu_781_p2.read(), ap_const_lv1_1))) {
        i5_0_reg_385 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
                esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        i5_0_reg_385 = i_5_reg_1009.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(strm_in_V_V_empty_n.read(), ap_const_logic_1))) {
        i_0_reg_307 = i_reg_830.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_307 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln1702_reg_880.read()))) {
        max_0_fu_108 = select_ln1719_1_reg_923.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())) && 
                esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_1))) {
        max_0_fu_108 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln1702_reg_880.read()))) {
        p_0205_0_fu_104 = select_ln1719_reg_918.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())) && 
                esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_1))) {
        p_0205_0_fu_104 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        reg_433 = input_real_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        reg_433 = input_real_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        reg_440 = input_imag_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
                 esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        reg_440 = input_imag_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        shift_idex_V_1_reg_319 = j_reg_863.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(grp_fft_fu_396_ap_done.read(), ap_const_logic_1))) {
        shift_idex_V_1_reg_319 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln1701_fu_499_p2.read(), ap_const_lv1_1))) {
        t_V_reg_331 = p_0205_0_fu_104.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        t_V_reg_331 = shift_idex_V_reg_948.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln1701_fu_499_p2.read(), ap_const_lv1_1))) {
        z_0_reg_340 = ap_const_lv8_6E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        z_0_reg_340 = z_reg_953.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        i_2_reg_961 = i_2_fu_723_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        i_3_reg_975 = i_3_fu_755_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        i_4_reg_989 = i_4_fu_787_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        i_5_reg_1009 = i_5_fu_805_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
        i_reg_830 = i_fu_465_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1746_fu_781_p2.read()))) {
        input_imag_addr_10_reg_1000 =  (sc_lv<14>) (zext_ln1747_fu_793_p1.read());
        input_real_addr_7_reg_994 =  (sc_lv<14>) (zext_ln1747_fu_793_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1728_fu_662_p2.read()))) {
        input_imag_addr_1_reg_942 =  (sc_lv<14>) (sext_ln544_fu_678_p1.read());
        input_real_addr_1_reg_936 =  (sc_lv<14>) (sext_ln544_fu_678_p1.read());
        shift_idex_V_reg_948 = shift_idex_V_fu_684_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1738_fu_717_p2.read()))) {
        input_imag_addr_4_reg_966 =  (sc_lv<14>) (zext_ln1739_fu_729_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln1702_fu_528_p2.read()))) {
        input_imag_addr_7_reg_890 =  (sc_lv<14>) (zext_ln1702_reg_868.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1743_fu_749_p2.read()))) {
        input_imag_addr_9_reg_980 =  (sc_lv<14>) (zext_ln1744_fu_761_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_real_addr_4_reg_884 =  (sc_lv<14>) (zext_ln1702_reg_868.read());
        or_ln1702_reg_880 = or_ln1702_fu_528_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_reg_863 = j_fu_505_p2.read();
        p_0205_0_load_reg_854 = p_0205_0_fu_104.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        max_reg_896 = grp_fu_406_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        or_ln1712_reg_903 = or_ln1712_fu_569_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        reg_447 = grp_fu_410_p2.read();
        reg_453 = grp_fu_414_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        select_ln1719_1_reg_923 = select_ln1719_1_fu_644_p3.read();
        select_ln1719_reg_918 = select_ln1719_fu_637_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
        tmp_V_2_reg_835 = strm_in_V_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        z_reg_953 = z_fu_696_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1701_fu_499_p2.read()))) {
        zext_ln1702_reg_868 = zext_ln1702_fu_511_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        zext_ln1728_reg_928 = zext_ln1728_fu_658_p1.read();
    }
}

void dut::thread_and_ln1712_fu_575_p2() {
    and_ln1712_fu_575_p2 = (or_ln1712_fu_569_p2.read() & grp_fu_422_p2.read());
}

void dut::thread_and_ln1719_1_fu_631_p2() {
    and_ln1719_1_fu_631_p2 = (and_ln1719_fu_626_p2.read() & grp_fu_422_p2.read());
}

void dut::thread_and_ln1719_fu_626_p2() {
    and_ln1719_fu_626_p2 = (or_ln1712_reg_903.read() & or_ln1719_fu_620_p2.read());
}

void dut::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dut::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void dut::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void dut::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void dut::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void dut::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void dut::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void dut::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dut::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void dut::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void dut::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void dut::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void dut::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void dut::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void dut::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void dut::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void dut::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dut::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void dut::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void dut::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void dut::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void dut::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void dut::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void dut::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void dut::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void dut::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dut::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void dut::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void dut::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void dut::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void dut::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void dut::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void dut::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void dut::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void dut::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dut::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dut::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dut::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dut::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()));
}

void dut::thread_ap_block_state2_ignore_call2() {
    ap_block_state2_ignore_call2 = (esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()));
}

void dut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
         esl_seteq<1,1,1>(icmp_ln1750_fu_799_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
         esl_seteq<1,1,1>(icmp_ln1750_fu_799_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut::thread_bitcast_ln1680_fu_481_p1() {
    bitcast_ln1680_fu_481_p1 = tmp_V_2_reg_835.read();
}

void dut::thread_bitcast_ln1681_fu_485_p1() {
    bitcast_ln1681_fu_485_p1 = strm_in_V_V_dout.read();
}

void dut::thread_bitcast_ln1712_fu_540_p1() {
    bitcast_ln1712_fu_540_p1 = max_reg_896.read();
}

void dut::thread_bitcast_ln1719_fu_591_p1() {
    bitcast_ln1719_fu_591_p1 = max_0_fu_108.read();
}

void dut::thread_bitcast_ln1739_1_fu_744_p1() {
    bitcast_ln1739_1_fu_744_p1 = xor_ln1739_fu_738_p2.read();
}

void dut::thread_bitcast_ln1739_fu_734_p1() {
    bitcast_ln1739_fu_734_p1 = input_imag_q0.read();
}

void dut::thread_bitcast_ln1744_1_fu_776_p1() {
    bitcast_ln1744_1_fu_776_p1 = xor_ln1744_fu_770_p2.read();
}

void dut::thread_bitcast_ln1744_fu_766_p1() {
    bitcast_ln1744_fu_766_p1 = input_imag_q0.read();
}

void dut::thread_freq_V_address0() {
    freq_V_address0 =  (sc_lv<14>) (zext_ln1702_fu_511_p1.read());
}

void dut::thread_freq_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        freq_V_ce0 = ap_const_logic_1;
    } else {
        freq_V_ce0 = ap_const_logic_0;
    }
}

void dut::thread_grp_fft_fu_396_ap_start() {
    grp_fft_fu_396_ap_start = grp_fft_fu_396_ap_start_reg.read();
}

void dut::thread_grp_fu_410_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_410_p1 = ap_const_lv32_38800000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        grp_fu_410_p1 = ap_const_lv32_40000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_410_p1 = reg_433.read();
    } else {
        grp_fu_410_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_grp_fu_414_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_414_p1 = ap_const_lv32_38800000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        grp_fu_414_p1 = ap_const_lv32_40000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_414_p1 = reg_440.read();
    } else {
        grp_fu_414_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_grp_fu_422_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_422_opcode = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_422_opcode = ap_const_lv5_4;
    } else {
        grp_fu_422_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void dut::thread_grp_fu_422_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_422_p1 = max_0_fu_108.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_422_p1 = ap_const_lv32_3F800000;
    } else {
        grp_fu_422_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_grp_fu_427_p2() {
    grp_fu_427_p2 = (shift_idex_V_1_reg_319.read() ^ ap_const_lv14_3FFF);
}

void dut::thread_i_2_fu_723_p2() {
    i_2_fu_723_p2 = (!i2_0_reg_352.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i2_0_reg_352.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dut::thread_i_3_fu_755_p2() {
    i_3_fu_755_p2 = (!i3_0_reg_363.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i3_0_reg_363.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dut::thread_i_4_fu_787_p2() {
    i_4_fu_787_p2 = (!i4_0_reg_374.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i4_0_reg_374.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dut::thread_i_5_fu_805_p2() {
    i_5_fu_805_p2 = (!i5_0_reg_385.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i5_0_reg_385.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dut::thread_i_fu_465_p2() {
    i_fu_465_p2 = (!i_0_reg_307.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i_0_reg_307.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dut::thread_icmp_ln1494_fu_522_p2() {
    icmp_ln1494_fu_522_p2 = (!freq_V_q0.read().is_01() || !ap_const_lv15_12E8.is_01())? sc_lv<1>(): (sc_bigint<15>(freq_V_q0.read()) > sc_bigint<15>(ap_const_lv15_12E8));
}

void dut::thread_icmp_ln1495_fu_516_p2() {
    icmp_ln1495_fu_516_p2 = (!freq_V_q0.read().is_01() || !ap_const_lv15_28.is_01())? sc_lv<1>(): (sc_bigint<15>(freq_V_q0.read()) < sc_bigint<15>(ap_const_lv15_28));
}

void dut::thread_icmp_ln1677_fu_459_p2() {
    icmp_ln1677_fu_459_p2 = (!i_0_reg_307.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_307.read() == ap_const_lv15_4000);
}

void dut::thread_icmp_ln1701_fu_499_p2() {
    icmp_ln1701_fu_499_p2 = (!shift_idex_V_1_reg_319.read().is_01() || !ap_const_lv14_2000.is_01())? sc_lv<1>(): sc_lv<1>(shift_idex_V_1_reg_319.read() == ap_const_lv14_2000);
}

void dut::thread_icmp_ln1712_1_fu_563_p2() {
    icmp_ln1712_1_fu_563_p2 = (!trunc_ln1712_fu_553_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln1712_fu_553_p1.read() == ap_const_lv23_0);
}

void dut::thread_icmp_ln1712_fu_557_p2() {
    icmp_ln1712_fu_557_p2 = (!tmp_fu_543_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_543_p4.read() != ap_const_lv8_FF);
}

void dut::thread_icmp_ln1719_1_fu_614_p2() {
    icmp_ln1719_1_fu_614_p2 = (!trunc_ln1719_fu_604_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln1719_fu_604_p1.read() == ap_const_lv23_0);
}

void dut::thread_icmp_ln1719_fu_608_p2() {
    icmp_ln1719_fu_608_p2 = (!tmp_6_fu_594_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_594_p4.read() != ap_const_lv8_FF);
}

void dut::thread_icmp_ln1728_fu_662_p2() {
    icmp_ln1728_fu_662_p2 = (!z_0_reg_340.read().is_01() || !ap_const_lv8_E6.is_01())? sc_lv<1>(): sc_lv<1>(z_0_reg_340.read() == ap_const_lv8_E6);
}

void dut::thread_icmp_ln1738_fu_717_p2() {
    icmp_ln1738_fu_717_p2 = (!i2_0_reg_352.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_352.read() == ap_const_lv15_4000);
}

void dut::thread_icmp_ln1743_fu_749_p2() {
    icmp_ln1743_fu_749_p2 = (!i3_0_reg_363.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(i3_0_reg_363.read() == ap_const_lv15_4000);
}

void dut::thread_icmp_ln1746_fu_781_p2() {
    icmp_ln1746_fu_781_p2 = (!i4_0_reg_374.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(i4_0_reg_374.read() == ap_const_lv15_4000);
}

void dut::thread_icmp_ln1750_fu_799_p2() {
    icmp_ln1750_fu_799_p2 = (!i5_0_reg_385.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(i5_0_reg_385.read() == ap_const_lv15_4000);
}

void dut::thread_input_imag_addr_5_gep_fu_189_p3() {
    input_imag_addr_5_gep_fu_189_p3 =  (sc_lv<14>) (zext_ln1702_reg_868.read());
}

void dut::thread_input_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        input_imag_address0 =  (sc_lv<14>) (zext_ln1751_fu_811_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        input_imag_address0 =  (sc_lv<14>) (zext_ln1747_fu_793_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        input_imag_address0 =  (sc_lv<14>) (zext_ln1744_fu_761_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1738_fu_717_p2.read()))) {
        input_imag_address0 =  (sc_lv<14>) (zext_ln1739_fu_729_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        input_imag_address0 = input_imag_addr_1_reg_942.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        input_imag_address0 =  (sc_lv<14>) (zext_ln1714_fu_581_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1))) {
        input_imag_address0 = input_imag_addr_5_gep_fu_189_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_ln1702_fu_528_p2.read()))) {
        input_imag_address0 =  (sc_lv<14>) (zext_ln1702_reg_868.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_imag_address0 =  (sc_lv<14>) (zext_ln1682_fu_490_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_imag_address0 = grp_fft_fu_396_X_I_address0.read();
    } else {
        input_imag_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void dut::thread_input_imag_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        input_imag_address1 = input_imag_addr_10_reg_1000.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        input_imag_address1 = input_imag_addr_9_reg_980.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        input_imag_address1 = input_imag_addr_4_reg_966.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_imag_address1 =  (sc_lv<14>) (zext_ln1731_fu_711_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        input_imag_address1 =  (sc_lv<14>) (zext_ln1729_fu_690_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        input_imag_address1 =  (sc_lv<14>) (sext_ln544_fu_678_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        input_imag_address1 = input_imag_addr_7_reg_890.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_imag_address1 =  (sc_lv<14>) (zext_ln1704_fu_534_p1.read());
    } else {
        input_imag_address1 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void dut::thread_input_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln1702_fu_528_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1738_fu_717_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(strm_in_V_V_empty_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        input_imag_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_imag_ce0 = grp_fft_fu_396_X_I_ce0.read();
    } else {
        input_imag_ce0 = ap_const_logic_0;
    }
}

void dut::thread_input_imag_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        input_imag_ce1 = ap_const_logic_1;
    } else {
        input_imag_ce1 = ap_const_logic_0;
    }
}

void dut::thread_input_imag_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)))) {
        input_imag_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_imag_d0 = bitcast_ln1681_fu_485_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_imag_d0 = grp_fft_fu_396_X_I_d0.read();
    } else {
        input_imag_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_input_imag_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        input_imag_d1 = bitcast_ln1744_1_fu_776_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        input_imag_d1 = bitcast_ln1739_1_fu_744_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        input_imag_d1 = reg_453.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        input_imag_d1 = ap_const_lv32_0;
    } else {
        input_imag_d1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_input_imag_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(strm_in_V_V_empty_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln1712_fu_575_p2.read())))) {
        input_imag_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_imag_we0 = grp_fft_fu_396_X_I_we0.read();
    } else {
        input_imag_we0 = ap_const_logic_0;
    }
}

void dut::thread_input_imag_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln1712_fu_575_p2.read())))) {
        input_imag_we1 = ap_const_logic_1;
    } else {
        input_imag_we1 = ap_const_logic_0;
    }
}

void dut::thread_input_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        input_real_address0 =  (sc_lv<14>) (zext_ln1751_fu_811_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        input_real_address0 =  (sc_lv<14>) (zext_ln1747_fu_793_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        input_real_address0 = input_real_addr_1_reg_936.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        input_real_address0 =  (sc_lv<14>) (zext_ln1714_fu_581_p1.read());
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_ln1702_fu_528_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)))) {
        input_real_address0 =  (sc_lv<14>) (zext_ln1702_reg_868.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_real_address0 =  (sc_lv<14>) (zext_ln1682_fu_490_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_real_address0 = grp_fft_fu_396_X_R_address0.read();
    } else {
        input_real_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void dut::thread_input_real_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        input_real_address1 = input_real_addr_7_reg_994.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_real_address1 =  (sc_lv<14>) (zext_ln1731_fu_711_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        input_real_address1 =  (sc_lv<14>) (zext_ln1729_fu_690_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        input_real_address1 =  (sc_lv<14>) (sext_ln544_fu_678_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        input_real_address1 = input_real_addr_4_reg_884.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_real_address1 =  (sc_lv<14>) (zext_ln1704_fu_534_p1.read());
    } else {
        input_real_address1 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void dut::thread_input_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln1702_fu_528_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(strm_in_V_V_empty_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        input_real_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_real_ce0 = grp_fft_fu_396_X_R_ce0.read();
    } else {
        input_real_ce0 = ap_const_logic_0;
    }
}

void dut::thread_input_real_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        input_real_ce1 = ap_const_logic_1;
    } else {
        input_real_ce1 = ap_const_logic_0;
    }
}

void dut::thread_input_real_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)))) {
        input_real_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_real_d0 = bitcast_ln1680_fu_481_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_real_d0 = grp_fft_fu_396_X_R_d0.read();
    } else {
        input_real_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_input_real_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        input_real_d1 = reg_447.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        input_real_d1 = ap_const_lv32_0;
    } else {
        input_real_d1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_input_real_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(strm_in_V_V_empty_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln1712_fu_575_p2.read())))) {
        input_real_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        input_real_we0 = grp_fft_fu_396_X_R_we0.read();
    } else {
        input_real_we0 = ap_const_logic_0;
    }
}

void dut::thread_input_real_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln1712_fu_575_p2.read())))) {
        input_real_we1 = ap_const_logic_1;
    } else {
        input_real_we1 = ap_const_logic_0;
    }
}

void dut::thread_j_fu_505_p2() {
    j_fu_505_p2 = (!shift_idex_V_1_reg_319.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(shift_idex_V_1_reg_319.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void dut::thread_or_ln1702_fu_528_p2() {
    or_ln1702_fu_528_p2 = (icmp_ln1495_fu_516_p2.read() | icmp_ln1494_fu_522_p2.read());
}

void dut::thread_or_ln1712_fu_569_p2() {
    or_ln1712_fu_569_p2 = (icmp_ln1712_1_fu_563_p2.read() | icmp_ln1712_fu_557_p2.read());
}

void dut::thread_or_ln1719_fu_620_p2() {
    or_ln1719_fu_620_p2 = (icmp_ln1719_1_fu_614_p2.read() | icmp_ln1719_fu_608_p2.read());
}

void dut::thread_ret_V_fu_672_p2() {
    ret_V_fu_672_p2 = (!zext_ln215_fu_668_p1.read().is_01() || !ap_const_lv15_7FC4.is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln215_fu_668_p1.read()) + sc_bigint<15>(ap_const_lv15_7FC4));
}

void dut::thread_select_ln1719_1_fu_644_p3() {
    select_ln1719_1_fu_644_p3 = (!and_ln1719_1_fu_631_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln1719_1_fu_631_p2.read()[0].to_bool())? max_reg_896.read(): max_0_fu_108.read());
}

void dut::thread_select_ln1719_fu_637_p3() {
    select_ln1719_fu_637_p3 = (!and_ln1719_1_fu_631_p2.read()[0].is_01())? sc_lv<14>(): ((and_ln1719_1_fu_631_p2.read()[0].to_bool())? shift_idex_V_1_reg_319.read(): p_0205_0_load_reg_854.read());
}

void dut::thread_sext_ln1731_fu_707_p1() {
    sext_ln1731_fu_707_p1 = esl_sext<14,9>(xor_ln1731_fu_702_p2.read());
}

void dut::thread_sext_ln544_fu_678_p1() {
    sext_ln544_fu_678_p1 = esl_sext<64,15>(ret_V_fu_672_p2.read());
}

void dut::thread_shift_idex_V_fu_684_p2() {
    shift_idex_V_fu_684_p2 = (!t_V_reg_331.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(t_V_reg_331.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void dut::thread_strm_in_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        strm_in_V_V_blk_n = strm_in_V_V_empty_n.read();
    } else {
        strm_in_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_in_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(strm_in_V_V_empty_n.read(), ap_const_logic_1)))) {
        strm_in_V_V_read = ap_const_logic_1;
    } else {
        strm_in_V_V_read = ap_const_logic_0;
    }
}

void dut::thread_strm_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        strm_out_V_V_blk_n = strm_out_V_V_full_n.read();
    } else {
        strm_out_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_out_V_V_din() {
    if (esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
            strm_out_V_V_din = tmp_V_1_fu_822_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
            strm_out_V_V_din = tmp_V_fu_817_p1.read();
        } else {
            strm_out_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        strm_out_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_strm_out_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_write = ap_const_logic_1;
    } else {
        strm_out_V_V_write = ap_const_logic_0;
    }
}

void dut::thread_tmp_6_fu_594_p4() {
    tmp_6_fu_594_p4 = bitcast_ln1719_fu_591_p1.read().range(30, 23);
}

void dut::thread_tmp_V_1_fu_822_p1() {
    tmp_V_1_fu_822_p1 = reg_440.read();
}

void dut::thread_tmp_V_fu_817_p1() {
    tmp_V_fu_817_p1 = input_real_q0.read();
}

void dut::thread_tmp_fu_543_p4() {
    tmp_fu_543_p4 = bitcast_ln1712_fu_540_p1.read().range(30, 23);
}

void dut::thread_trunc_ln1712_fu_553_p1() {
    trunc_ln1712_fu_553_p1 = bitcast_ln1712_fu_540_p1.read().range(23-1, 0);
}

void dut::thread_trunc_ln1719_fu_604_p1() {
    trunc_ln1719_fu_604_p1 = bitcast_ln1719_fu_591_p1.read().range(23-1, 0);
}

void dut::thread_xor_ln1731_fu_702_p2() {
    xor_ln1731_fu_702_p2 = (zext_ln1728_reg_928.read() ^ ap_const_lv9_1FF);
}

void dut::thread_xor_ln1739_fu_738_p2() {
    xor_ln1739_fu_738_p2 = (bitcast_ln1739_fu_734_p1.read() ^ ap_const_lv32_80000000);
}

void dut::thread_xor_ln1744_fu_770_p2() {
    xor_ln1744_fu_770_p2 = (bitcast_ln1744_fu_766_p1.read() ^ ap_const_lv32_80000000);
}

void dut::thread_z_fu_696_p2() {
    z_fu_696_p2 = (!z_0_reg_340.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(z_0_reg_340.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void dut::thread_zext_ln1682_fu_490_p1() {
    zext_ln1682_fu_490_p1 = esl_zext<64,15>(i_0_reg_307.read());
}

void dut::thread_zext_ln1702_fu_511_p1() {
    zext_ln1702_fu_511_p1 = esl_zext<64,14>(shift_idex_V_1_reg_319.read());
}

void dut::thread_zext_ln1704_fu_534_p1() {
    zext_ln1704_fu_534_p1 = esl_zext<64,14>(grp_fu_427_p2.read());
}

void dut::thread_zext_ln1714_fu_581_p1() {
    zext_ln1714_fu_581_p1 = esl_zext<64,14>(grp_fu_427_p2.read());
}

void dut::thread_zext_ln1728_fu_658_p1() {
    zext_ln1728_fu_658_p1 = esl_zext<9,8>(z_0_reg_340.read());
}

void dut::thread_zext_ln1729_fu_690_p1() {
    zext_ln1729_fu_690_p1 = esl_zext<64,8>(z_0_reg_340.read());
}

void dut::thread_zext_ln1731_fu_711_p1() {
    zext_ln1731_fu_711_p1 = esl_zext<64,14>(sext_ln1731_fu_707_p1.read());
}

void dut::thread_zext_ln1739_fu_729_p1() {
    zext_ln1739_fu_729_p1 = esl_zext<64,15>(i2_0_reg_352.read());
}

void dut::thread_zext_ln1744_fu_761_p1() {
    zext_ln1744_fu_761_p1 = esl_zext<64,15>(i3_0_reg_363.read());
}

void dut::thread_zext_ln1747_fu_793_p1() {
    zext_ln1747_fu_793_p1 = esl_zext<64,15>(i4_0_reg_374.read());
}

void dut::thread_zext_ln1751_fu_811_p1() {
    zext_ln1751_fu_811_p1 = esl_zext<64,15>(i5_0_reg_385.read());
}

void dut::thread_zext_ln215_fu_668_p1() {
    zext_ln215_fu_668_p1 = esl_zext<15,14>(t_V_reg_331.read());
}

void dut::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())) && esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln1677_fu_459_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(strm_in_V_V_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_fft_fu_396_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln1701_fu_499_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(or_ln1702_fu_528_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(icmp_ln1728_fu_662_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(icmp_ln1738_fu_717_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(grp_fft_fu_396_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(icmp_ln1743_fu_749_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state39;
            }
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 549755813888 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(icmp_ln1746_fu_781_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state47;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 70368744177664 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(icmp_ln1750_fu_799_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state48;
            }
            break;
        case 140737488355328 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state49;
            } else {
                ap_NS_fsm = ap_ST_fsm_state48;
            }
            break;
        case 281474976710656 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state47;
            } else {
                ap_NS_fsm = ap_ST_fsm_state49;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<49>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void dut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_V_dout\" :  \"" << strm_in_V_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_V_empty_n\" :  \"" << strm_in_V_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_in_V_V_read\" :  \"" << strm_in_V_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_din\" :  \"" << strm_out_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_out_V_V_full_n\" :  \"" << strm_out_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_write\" :  \"" << strm_out_V_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

