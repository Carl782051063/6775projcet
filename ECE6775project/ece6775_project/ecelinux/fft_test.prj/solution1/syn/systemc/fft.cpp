// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<31> fft::ap_ST_fsm_state1 = "1";
const sc_lv<31> fft::ap_ST_fsm_state2 = "10";
const sc_lv<31> fft::ap_ST_fsm_state3 = "100";
const sc_lv<31> fft::ap_ST_fsm_state4 = "1000";
const sc_lv<31> fft::ap_ST_fsm_state5 = "10000";
const sc_lv<31> fft::ap_ST_fsm_state6 = "100000";
const sc_lv<31> fft::ap_ST_fsm_state7 = "1000000";
const sc_lv<31> fft::ap_ST_fsm_state8 = "10000000";
const sc_lv<31> fft::ap_ST_fsm_state9 = "100000000";
const sc_lv<31> fft::ap_ST_fsm_state10 = "1000000000";
const sc_lv<31> fft::ap_ST_fsm_state11 = "10000000000";
const sc_lv<31> fft::ap_ST_fsm_state12 = "100000000000";
const sc_lv<31> fft::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<31> fft::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<31> fft::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<31> fft::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<31> fft::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> fft::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fft::ap_const_lv32_7 = "111";
const sc_lv<32> fft::ap_const_lv32_10 = "10000";
const sc_lv<32> fft::ap_const_lv32_18 = "11000";
const sc_lv<32> fft::ap_const_lv32_1D = "11101";
const sc_lv<32> fft::ap_const_lv32_2 = "10";
const sc_lv<1> fft::ap_const_lv1_0 = "0";
const sc_lv<32> fft::ap_const_lv32_3 = "11";
const sc_lv<1> fft::ap_const_lv1_1 = "1";
const sc_lv<32> fft::ap_const_lv32_4 = "100";
const sc_lv<32> fft::ap_const_lv32_5 = "101";
const sc_lv<32> fft::ap_const_lv32_6 = "110";
const sc_lv<32> fft::ap_const_lv32_B = "1011";
const sc_lv<32> fft::ap_const_lv32_15 = "10101";
const sc_lv<32> fft::ap_const_lv32_2000 = "10000000000000";
const sc_lv<32> fft::ap_const_lv32_1 = "1";
const sc_lv<4> fft::ap_const_lv4_1 = "1";
const sc_lv<14> fft::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> fft::ap_const_lv32_1E = "11110";
const sc_lv<32> fft::ap_const_lv32_F = "1111";
const sc_lv<32> fft::ap_const_lv32_16 = "10110";
const sc_lv<32> fft::ap_const_lv32_17 = "10111";
const sc_lv<32> fft::ap_const_lv32_C = "1100";
const sc_lv<32> fft::ap_const_lv32_11 = "10001";
const sc_lv<32> fft::ap_const_lv32_19 = "11001";
const sc_lv<32> fft::ap_const_lv32_8 = "1000";
const sc_lv<4> fft::ap_const_lv4_F = "1111";
const sc_lv<15> fft::ap_const_lv15_1 = "1";
const sc_lv<32> fft::ap_const_lv32_E = "1110";
const sc_lv<14> fft::ap_const_lv14_1 = "1";
const sc_lv<32> fft::ap_const_lv32_1F = "11111";
const sc_lv<18> fft::ap_const_lv18_1 = "1";
const sc_lv<2> fft::ap_const_lv2_0 = "00";
const sc_lv<2> fft::ap_const_lv2_1 = "1";
const bool fft::ap_const_boolean_1 = true;

fft::fft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cosa_lookup_table_U = new fft_cosa_lookup_tbkb("cosa_lookup_table_U");
    cosa_lookup_table_U->clk(ap_clk);
    cosa_lookup_table_U->reset(ap_rst);
    cosa_lookup_table_U->address0(cosa_lookup_table_address0);
    cosa_lookup_table_U->ce0(cosa_lookup_table_ce0);
    cosa_lookup_table_U->q0(cosa_lookup_table_q0);
    sina_lookup_table_U = new fft_sina_lookup_tcud("sina_lookup_table_U");
    sina_lookup_table_U->clk(ap_clk);
    sina_lookup_table_U->reset(ap_rst);
    sina_lookup_table_U->address0(sina_lookup_table_address0);
    sina_lookup_table_U->ce0(sina_lookup_table_ce0);
    sina_lookup_table_U->q0(sina_lookup_table_q0);
    grp_bit_reverse_fu_190 = new bit_reverse("grp_bit_reverse_fu_190");
    grp_bit_reverse_fu_190->ap_clk(ap_clk);
    grp_bit_reverse_fu_190->ap_rst(ap_rst);
    grp_bit_reverse_fu_190->ap_start(grp_bit_reverse_fu_190_ap_start);
    grp_bit_reverse_fu_190->ap_done(grp_bit_reverse_fu_190_ap_done);
    grp_bit_reverse_fu_190->ap_idle(grp_bit_reverse_fu_190_ap_idle);
    grp_bit_reverse_fu_190->ap_ready(grp_bit_reverse_fu_190_ap_ready);
    grp_bit_reverse_fu_190->X_R_address0(grp_bit_reverse_fu_190_X_R_address0);
    grp_bit_reverse_fu_190->X_R_ce0(grp_bit_reverse_fu_190_X_R_ce0);
    grp_bit_reverse_fu_190->X_R_we0(grp_bit_reverse_fu_190_X_R_we0);
    grp_bit_reverse_fu_190->X_R_d0(grp_bit_reverse_fu_190_X_R_d0);
    grp_bit_reverse_fu_190->X_R_q0(X_R_q0);
    grp_bit_reverse_fu_190->X_I_address0(grp_bit_reverse_fu_190_X_I_address0);
    grp_bit_reverse_fu_190->X_I_ce0(grp_bit_reverse_fu_190_X_I_ce0);
    grp_bit_reverse_fu_190->X_I_we0(grp_bit_reverse_fu_190_X_I_we0);
    grp_bit_reverse_fu_190->X_I_d0(grp_bit_reverse_fu_190_X_I_d0);
    grp_bit_reverse_fu_190->X_I_q0(X_I_q0);
    dut_faddfsub_32nsdEe_U3 = new dut_faddfsub_32nsdEe<1,5,32,32,32>("dut_faddfsub_32nsdEe_U3");
    dut_faddfsub_32nsdEe_U3->clk(ap_clk);
    dut_faddfsub_32nsdEe_U3->reset(ap_rst);
    dut_faddfsub_32nsdEe_U3->din0(grp_fu_198_p0);
    dut_faddfsub_32nsdEe_U3->din1(grp_fu_198_p1);
    dut_faddfsub_32nsdEe_U3->opcode(grp_fu_198_opcode);
    dut_faddfsub_32nsdEe_U3->ce(ap_var_for_const0);
    dut_faddfsub_32nsdEe_U3->dout(grp_fu_198_p2);
    dut_faddfsub_32nsdEe_U4 = new dut_faddfsub_32nsdEe<1,5,32,32,32>("dut_faddfsub_32nsdEe_U4");
    dut_faddfsub_32nsdEe_U4->clk(ap_clk);
    dut_faddfsub_32nsdEe_U4->reset(ap_rst);
    dut_faddfsub_32nsdEe_U4->din0(grp_fu_202_p0);
    dut_faddfsub_32nsdEe_U4->din1(grp_fu_202_p1);
    dut_faddfsub_32nsdEe_U4->opcode(grp_fu_202_opcode);
    dut_faddfsub_32nsdEe_U4->ce(ap_var_for_const0);
    dut_faddfsub_32nsdEe_U4->dout(grp_fu_202_p2);
    dut_fmul_32ns_32neOg_U5 = new dut_fmul_32ns_32neOg<1,4,32,32,32>("dut_fmul_32ns_32neOg_U5");
    dut_fmul_32ns_32neOg_U5->clk(ap_clk);
    dut_fmul_32ns_32neOg_U5->reset(ap_rst);
    dut_fmul_32ns_32neOg_U5->din0(reg_230);
    dut_fmul_32ns_32neOg_U5->din1(c_reg_478);
    dut_fmul_32ns_32neOg_U5->ce(ap_var_for_const0);
    dut_fmul_32ns_32neOg_U5->dout(grp_fu_206_p2);
    dut_fmul_32ns_32neOg_U6 = new dut_fmul_32ns_32neOg<1,4,32,32,32>("dut_fmul_32ns_32neOg_U6");
    dut_fmul_32ns_32neOg_U6->clk(ap_clk);
    dut_fmul_32ns_32neOg_U6->reset(ap_rst);
    dut_fmul_32ns_32neOg_U6->din0(reg_237);
    dut_fmul_32ns_32neOg_U6->din1(s_reg_484);
    dut_fmul_32ns_32neOg_U6->ce(ap_var_for_const0);
    dut_fmul_32ns_32neOg_U6->dout(grp_fu_210_p2);
    dut_fmul_32ns_32neOg_U7 = new dut_fmul_32ns_32neOg<1,4,32,32,32>("dut_fmul_32ns_32neOg_U7");
    dut_fmul_32ns_32neOg_U7->clk(ap_clk);
    dut_fmul_32ns_32neOg_U7->reset(ap_rst);
    dut_fmul_32ns_32neOg_U7->din0(reg_237);
    dut_fmul_32ns_32neOg_U7->din1(c_reg_478);
    dut_fmul_32ns_32neOg_U7->ce(ap_var_for_const0);
    dut_fmul_32ns_32neOg_U7->dout(grp_fu_214_p2);
    dut_fmul_32ns_32neOg_U8 = new dut_fmul_32ns_32neOg<1,4,32,32,32>("dut_fmul_32ns_32neOg_U8");
    dut_fmul_32ns_32neOg_U8->clk(ap_clk);
    dut_fmul_32ns_32neOg_U8->reset(ap_rst);
    dut_fmul_32ns_32neOg_U8->din0(reg_230);
    dut_fmul_32ns_32neOg_U8->din1(s_reg_484);
    dut_fmul_32ns_32neOg_U8->ce(ap_var_for_const0);
    dut_fmul_32ns_32neOg_U8->dout(grp_fu_218_p2);
    dut_fptrunc_64ns_fYi_U9 = new dut_fptrunc_64ns_fYi<1,2,64,32>("dut_fptrunc_64ns_fYi_U9");
    dut_fptrunc_64ns_fYi_U9->clk(ap_clk);
    dut_fptrunc_64ns_fYi_U9->reset(ap_rst);
    dut_fptrunc_64ns_fYi_U9->din0(cosa_lookup_table_q0);
    dut_fptrunc_64ns_fYi_U9->ce(ap_var_for_const0);
    dut_fptrunc_64ns_fYi_U9->dout(grp_fu_222_p1);
    dut_fptrunc_64ns_fYi_U10 = new dut_fptrunc_64ns_fYi<1,2,64,32>("dut_fptrunc_64ns_fYi_U10");
    dut_fptrunc_64ns_fYi_U10->clk(ap_clk);
    dut_fptrunc_64ns_fYi_U10->reset(ap_rst);
    dut_fptrunc_64ns_fYi_U10->din0(sina_lookup_table_q0);
    dut_fptrunc_64ns_fYi_U10->ce(ap_var_for_const0);
    dut_fptrunc_64ns_fYi_U10->dout(grp_fu_226_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DFTpts_fu_266_p2);
    sensitive << ( zext_ln1786_fu_256_p1 );

    SC_METHOD(thread_X_I_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( X_I_addr_reg_498 );
    sensitive << ( X_I_addr_1_reg_508 );
    sensitive << ( grp_bit_reverse_fu_190_X_I_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( sext_ln1816_fu_394_p1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_X_I_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_bit_reverse_fu_190_X_I_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_X_I_d0);
    sensitive << ( reg_250 );
    sensitive << ( tmp_5_reg_548 );
    sensitive << ( grp_bit_reverse_fu_190_X_I_d0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_X_I_we0);
    sensitive << ( grp_bit_reverse_fu_190_X_I_we0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_X_R_address0);
    sensitive << ( X_R_addr_reg_493 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( X_R_addr_1_reg_503 );
    sensitive << ( grp_bit_reverse_fu_190_X_R_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( sext_ln1816_fu_394_p1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_X_R_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_bit_reverse_fu_190_X_R_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_X_R_d0);
    sensitive << ( reg_244 );
    sensitive << ( tmp_4_reg_543 );
    sensitive << ( grp_bit_reverse_fu_190_X_R_d0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_X_R_we0);
    sensitive << ( grp_bit_reverse_fu_190_X_R_we0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln1786_fu_260_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln1786_fu_260_p2 );

    SC_METHOD(thread_cosa_lookup_table_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1797_fu_305_p1 );

    SC_METHOD(thread_cosa_lookup_table_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_bit_reverse_fu_190_ap_start);
    sensitive << ( grp_bit_reverse_fu_190_ap_start_reg );

    SC_METHOD(thread_grp_fu_198_opcode);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_198_p0);
    sensitive << ( reg_230 );
    sensitive << ( tmp_reg_523 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_198_p1);
    sensitive << ( reg_244 );
    sensitive << ( tmp_1_reg_528 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_202_opcode);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_202_p0);
    sensitive << ( reg_237 );
    sensitive << ( tmp_2_reg_533 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_202_p1);
    sensitive << ( reg_250 );
    sensitive << ( tmp_3_reg_538 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_i_1_fu_406_p2);
    sensitive << ( zext_ln1788_reg_420 );
    sensitive << ( i_0_reg_181 );

    SC_METHOD(thread_i_cast_fu_290_p1);
    sensitive << ( i_reg_158 );

    SC_METHOD(thread_i_lower_fu_389_p2);
    sensitive << ( numBF_reg_430 );
    sensitive << ( i_0_reg_181 );

    SC_METHOD(thread_icmp_ln1786_fu_260_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( stage_0_reg_146 );

    SC_METHOD(thread_icmp_ln1796_fu_294_p2);
    sensitive << ( trunc_ln_reg_425 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_158 );

    SC_METHOD(thread_icmp_ln1813_fu_383_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_11_fu_373_p4 );

    SC_METHOD(thread_j_fu_299_p2);
    sensitive << ( i_reg_158 );

    SC_METHOD(thread_k_fu_411_p2);
    sensitive << ( step_0_reg_134 );
    sensitive << ( k_0_reg_169 );

    SC_METHOD(thread_lshr_ln1825_1_fu_325_p4);
    sensitive << ( sub_ln1825_fu_319_p2 );

    SC_METHOD(thread_lshr_ln1825_2_fu_345_p4);
    sensitive << ( step_0_reg_134 );

    SC_METHOD(thread_numBF_fu_286_p1);
    sensitive << ( trunc_ln_fu_276_p4 );

    SC_METHOD(thread_sext_ln1797_fu_305_p1);
    sensitive << ( k_0_reg_169 );

    SC_METHOD(thread_sext_ln1816_fu_394_p1);
    sensitive << ( i_lower_fu_389_p2 );

    SC_METHOD(thread_sext_ln1818_fu_400_p1);
    sensitive << ( i_0_reg_181 );

    SC_METHOD(thread_sina_lookup_table_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1797_fu_305_p1 );

    SC_METHOD(thread_sina_lookup_table_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_stage_fu_367_p2);
    sensitive << ( stage_0_reg_146 );

    SC_METHOD(thread_step_fu_359_p3);
    sensitive << ( tmp_10_fu_311_p3 );
    sensitive << ( sub_ln1825_1_fu_339_p2 );
    sensitive << ( zext_ln1825_1_fu_355_p1 );

    SC_METHOD(thread_sub_ln1825_1_fu_339_p2);
    sensitive << ( zext_ln1825_fu_335_p1 );

    SC_METHOD(thread_sub_ln1825_fu_319_p2);
    sensitive << ( step_0_reg_134 );

    SC_METHOD(thread_tmp_10_fu_311_p3);
    sensitive << ( step_0_reg_134 );

    SC_METHOD(thread_tmp_11_fu_373_p4);
    sensitive << ( i_0_reg_181 );

    SC_METHOD(thread_trunc_ln_fu_276_p4);
    sensitive << ( DFTpts_fu_266_p2 );

    SC_METHOD(thread_zext_ln1786_fu_256_p1);
    sensitive << ( stage_0_reg_146 );

    SC_METHOD(thread_zext_ln1788_fu_272_p1);
    sensitive << ( DFTpts_fu_266_p2 );

    SC_METHOD(thread_zext_ln1825_1_fu_355_p1);
    sensitive << ( lshr_ln1825_2_fu_345_p4 );

    SC_METHOD(thread_zext_ln1825_fu_335_p1);
    sensitive << ( lshr_ln1825_1_fu_325_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln1786_fu_260_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln1796_fu_294_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln1813_fu_383_p2 );
    sensitive << ( grp_bit_reverse_fu_190_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000001";
    grp_bit_reverse_fu_190_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_R_address0, "(port)X_R_address0");
    sc_trace(mVcdFile, X_R_ce0, "(port)X_R_ce0");
    sc_trace(mVcdFile, X_R_we0, "(port)X_R_we0");
    sc_trace(mVcdFile, X_R_d0, "(port)X_R_d0");
    sc_trace(mVcdFile, X_R_q0, "(port)X_R_q0");
    sc_trace(mVcdFile, X_I_address0, "(port)X_I_address0");
    sc_trace(mVcdFile, X_I_ce0, "(port)X_I_ce0");
    sc_trace(mVcdFile, X_I_we0, "(port)X_I_we0");
    sc_trace(mVcdFile, X_I_d0, "(port)X_I_d0");
    sc_trace(mVcdFile, X_I_q0, "(port)X_I_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cosa_lookup_table_address0, "cosa_lookup_table_address0");
    sc_trace(mVcdFile, cosa_lookup_table_ce0, "cosa_lookup_table_ce0");
    sc_trace(mVcdFile, cosa_lookup_table_q0, "cosa_lookup_table_q0");
    sc_trace(mVcdFile, sina_lookup_table_address0, "sina_lookup_table_address0");
    sc_trace(mVcdFile, sina_lookup_table_ce0, "sina_lookup_table_ce0");
    sc_trace(mVcdFile, sina_lookup_table_q0, "sina_lookup_table_q0");
    sc_trace(mVcdFile, reg_230, "reg_230");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, reg_237, "reg_237");
    sc_trace(mVcdFile, grp_fu_198_p2, "grp_fu_198_p2");
    sc_trace(mVcdFile, reg_244, "reg_244");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, grp_fu_202_p2, "grp_fu_202_p2");
    sc_trace(mVcdFile, reg_250, "reg_250");
    sc_trace(mVcdFile, zext_ln1788_fu_272_p1, "zext_ln1788_fu_272_p1");
    sc_trace(mVcdFile, zext_ln1788_reg_420, "zext_ln1788_reg_420");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln1786_fu_260_p2, "icmp_ln1786_fu_260_p2");
    sc_trace(mVcdFile, trunc_ln_fu_276_p4, "trunc_ln_fu_276_p4");
    sc_trace(mVcdFile, trunc_ln_reg_425, "trunc_ln_reg_425");
    sc_trace(mVcdFile, numBF_fu_286_p1, "numBF_fu_286_p1");
    sc_trace(mVcdFile, numBF_reg_430, "numBF_reg_430");
    sc_trace(mVcdFile, i_cast_fu_290_p1, "i_cast_fu_290_p1");
    sc_trace(mVcdFile, i_cast_reg_435, "i_cast_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_fu_299_p2, "j_fu_299_p2");
    sc_trace(mVcdFile, j_reg_443, "j_reg_443");
    sc_trace(mVcdFile, icmp_ln1796_fu_294_p2, "icmp_ln1796_fu_294_p2");
    sc_trace(mVcdFile, step_fu_359_p3, "step_fu_359_p3");
    sc_trace(mVcdFile, stage_fu_367_p2, "stage_fu_367_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_222_p1, "grp_fu_222_p1");
    sc_trace(mVcdFile, c_reg_478, "c_reg_478");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_226_p1, "grp_fu_226_p1");
    sc_trace(mVcdFile, s_reg_484, "s_reg_484");
    sc_trace(mVcdFile, X_R_addr_reg_493, "X_R_addr_reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln1813_fu_383_p2, "icmp_ln1813_fu_383_p2");
    sc_trace(mVcdFile, X_I_addr_reg_498, "X_I_addr_reg_498");
    sc_trace(mVcdFile, X_R_addr_1_reg_503, "X_R_addr_1_reg_503");
    sc_trace(mVcdFile, X_I_addr_1_reg_508, "X_I_addr_1_reg_508");
    sc_trace(mVcdFile, i_1_fu_406_p2, "i_1_fu_406_p2");
    sc_trace(mVcdFile, i_1_reg_513, "i_1_reg_513");
    sc_trace(mVcdFile, k_fu_411_p2, "k_fu_411_p2");
    sc_trace(mVcdFile, grp_fu_206_p2, "grp_fu_206_p2");
    sc_trace(mVcdFile, tmp_reg_523, "tmp_reg_523");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_210_p2, "grp_fu_210_p2");
    sc_trace(mVcdFile, tmp_1_reg_528, "tmp_1_reg_528");
    sc_trace(mVcdFile, grp_fu_214_p2, "grp_fu_214_p2");
    sc_trace(mVcdFile, tmp_2_reg_533, "tmp_2_reg_533");
    sc_trace(mVcdFile, grp_fu_218_p2, "grp_fu_218_p2");
    sc_trace(mVcdFile, tmp_3_reg_538, "tmp_3_reg_538");
    sc_trace(mVcdFile, tmp_4_reg_543, "tmp_4_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_5_reg_548, "tmp_5_reg_548");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_ap_start, "grp_bit_reverse_fu_190_ap_start");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_ap_done, "grp_bit_reverse_fu_190_ap_done");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_ap_idle, "grp_bit_reverse_fu_190_ap_idle");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_ap_ready, "grp_bit_reverse_fu_190_ap_ready");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_R_address0, "grp_bit_reverse_fu_190_X_R_address0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_R_ce0, "grp_bit_reverse_fu_190_X_R_ce0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_R_we0, "grp_bit_reverse_fu_190_X_R_we0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_R_d0, "grp_bit_reverse_fu_190_X_R_d0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_I_address0, "grp_bit_reverse_fu_190_X_I_address0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_I_ce0, "grp_bit_reverse_fu_190_X_I_ce0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_I_we0, "grp_bit_reverse_fu_190_X_I_we0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_X_I_d0, "grp_bit_reverse_fu_190_X_I_d0");
    sc_trace(mVcdFile, step_0_reg_134, "step_0_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, stage_0_reg_146, "stage_0_reg_146");
    sc_trace(mVcdFile, i_reg_158, "i_reg_158");
    sc_trace(mVcdFile, k_0_reg_169, "k_0_reg_169");
    sc_trace(mVcdFile, i_0_reg_181, "i_0_reg_181");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_bit_reverse_fu_190_ap_start_reg, "grp_bit_reverse_fu_190_ap_start_reg");
    sc_trace(mVcdFile, sext_ln1797_fu_305_p1, "sext_ln1797_fu_305_p1");
    sc_trace(mVcdFile, sext_ln1816_fu_394_p1, "sext_ln1816_fu_394_p1");
    sc_trace(mVcdFile, sext_ln1818_fu_400_p1, "sext_ln1818_fu_400_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_fu_198_p0, "grp_fu_198_p0");
    sc_trace(mVcdFile, grp_fu_198_p1, "grp_fu_198_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_202_p0, "grp_fu_202_p0");
    sc_trace(mVcdFile, grp_fu_202_p1, "grp_fu_202_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, zext_ln1786_fu_256_p1, "zext_ln1786_fu_256_p1");
    sc_trace(mVcdFile, DFTpts_fu_266_p2, "DFTpts_fu_266_p2");
    sc_trace(mVcdFile, sub_ln1825_fu_319_p2, "sub_ln1825_fu_319_p2");
    sc_trace(mVcdFile, lshr_ln1825_1_fu_325_p4, "lshr_ln1825_1_fu_325_p4");
    sc_trace(mVcdFile, zext_ln1825_fu_335_p1, "zext_ln1825_fu_335_p1");
    sc_trace(mVcdFile, lshr_ln1825_2_fu_345_p4, "lshr_ln1825_2_fu_345_p4");
    sc_trace(mVcdFile, tmp_10_fu_311_p3, "tmp_10_fu_311_p3");
    sc_trace(mVcdFile, sub_ln1825_1_fu_339_p2, "sub_ln1825_1_fu_339_p2");
    sc_trace(mVcdFile, zext_ln1825_1_fu_355_p1, "zext_ln1825_1_fu_355_p1");
    sc_trace(mVcdFile, tmp_11_fu_373_p4, "tmp_11_fu_373_p4");
    sc_trace(mVcdFile, i_lower_fu_389_p2, "i_lower_fu_389_p2");
    sc_trace(mVcdFile, grp_fu_198_opcode, "grp_fu_198_opcode");
    sc_trace(mVcdFile, grp_fu_202_opcode, "grp_fu_202_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fft::~fft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cosa_lookup_table_U;
    delete sina_lookup_table_U;
    delete grp_bit_reverse_fu_190;
    delete dut_faddfsub_32nsdEe_U3;
    delete dut_faddfsub_32nsdEe_U4;
    delete dut_fmul_32ns_32neOg_U5;
    delete dut_fmul_32ns_32neOg_U6;
    delete dut_fmul_32ns_32neOg_U7;
    delete dut_fmul_32ns_32neOg_U8;
    delete dut_fptrunc_64ns_fYi_U9;
    delete dut_fptrunc_64ns_fYi_U10;
}

void fft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fft::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_bit_reverse_fu_190_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_bit_reverse_fu_190_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_bit_reverse_fu_190_ap_ready.read())) {
            grp_bit_reverse_fu_190_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        i_0_reg_181 = i_1_reg_513.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_0_reg_181 = i_cast_reg_435.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1813_fu_383_p2.read()))) {
        i_reg_158 = j_reg_443.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln1786_fu_260_p2.read(), ap_const_lv1_0))) {
        i_reg_158 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1813_fu_383_p2.read()))) {
        k_0_reg_169 = k_fu_411_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln1786_fu_260_p2.read(), ap_const_lv1_0))) {
        k_0_reg_169 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln1796_fu_294_p2.read(), ap_const_lv1_1))) {
        stage_0_reg_146 = stage_fu_367_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_bit_reverse_fu_190_ap_done.read(), ap_const_logic_1))) {
        stage_0_reg_146 = ap_const_lv4_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln1796_fu_294_p2.read(), ap_const_lv1_1))) {
        step_0_reg_134 = step_fu_359_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_bit_reverse_fu_190_ap_done.read(), ap_const_logic_1))) {
        step_0_reg_134 = ap_const_lv32_2000;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln1813_fu_383_p2.read()))) {
        X_I_addr_1_reg_508 =  (sc_lv<14>) (sext_ln1818_fu_400_p1.read());
        X_I_addr_reg_498 =  (sc_lv<14>) (sext_ln1816_fu_394_p1.read());
        X_R_addr_1_reg_503 =  (sc_lv<14>) (sext_ln1818_fu_400_p1.read());
        X_R_addr_reg_493 =  (sc_lv<14>) (sext_ln1816_fu_394_p1.read());
        i_1_reg_513 = i_1_fu_406_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_reg_478 = grp_fu_222_p1.read();
        s_reg_484 = grp_fu_226_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_cast_reg_435 = i_cast_fu_290_p1.read();
        j_reg_443 = j_fu_299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln1786_fu_260_p2.read(), ap_const_lv1_0))) {
        numBF_reg_430 = numBF_fu_286_p1.read();
        trunc_ln_reg_425 = DFTpts_fu_266_p2.read().range(14, 1);
        zext_ln1788_reg_420 = zext_ln1788_fu_272_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_230 = X_R_q0.read();
        reg_237 = X_I_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        reg_244 = grp_fu_198_p2.read();
        reg_250 = grp_fu_202_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_1_reg_528 = grp_fu_210_p2.read();
        tmp_2_reg_533 = grp_fu_214_p2.read();
        tmp_3_reg_538 = grp_fu_218_p2.read();
        tmp_reg_523 = grp_fu_206_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_4_reg_543 = grp_fu_198_p2.read();
        tmp_5_reg_548 = grp_fu_202_p2.read();
    }
}

void fft::thread_DFTpts_fu_266_p2() {
    DFTpts_fu_266_p2 = (!zext_ln1786_fu_256_p1.read().is_01())? sc_lv<15>(): ap_const_lv15_1 << (unsigned short)zext_ln1786_fu_256_p1.read().to_uint();
}

void fft::thread_X_I_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        X_I_address0 = X_I_addr_reg_498.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        X_I_address0 = X_I_addr_1_reg_508.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        X_I_address0 =  (sc_lv<14>) (sext_ln1816_fu_394_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_address0 = grp_bit_reverse_fu_190_X_I_address0.read();
    } else {
        X_I_address0 = "XXXXXXXXXXXXXX";
    }
}

void fft::thread_X_I_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        X_I_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_ce0 = grp_bit_reverse_fu_190_X_I_ce0.read();
    } else {
        X_I_ce0 = ap_const_logic_0;
    }
}

void fft::thread_X_I_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        X_I_d0 = reg_250.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        X_I_d0 = tmp_5_reg_548.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_d0 = grp_bit_reverse_fu_190_X_I_d0.read();
    } else {
        X_I_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_X_I_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        X_I_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_we0 = grp_bit_reverse_fu_190_X_I_we0.read();
    } else {
        X_I_we0 = ap_const_logic_0;
    }
}

void fft::thread_X_R_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        X_R_address0 = X_R_addr_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        X_R_address0 = X_R_addr_1_reg_503.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        X_R_address0 =  (sc_lv<14>) (sext_ln1816_fu_394_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_address0 = grp_bit_reverse_fu_190_X_R_address0.read();
    } else {
        X_R_address0 = "XXXXXXXXXXXXXX";
    }
}

void fft::thread_X_R_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        X_R_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_ce0 = grp_bit_reverse_fu_190_X_R_ce0.read();
    } else {
        X_R_ce0 = ap_const_logic_0;
    }
}

void fft::thread_X_R_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        X_R_d0 = reg_244.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        X_R_d0 = tmp_4_reg_543.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_d0 = grp_bit_reverse_fu_190_X_R_d0.read();
    } else {
        X_R_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_X_R_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        X_R_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_we0 = grp_bit_reverse_fu_190_X_R_we0.read();
    } else {
        X_R_we0 = ap_const_logic_0;
    }
}

void fft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fft::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void fft::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void fft::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void fft::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void fft::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void fft::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fft::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void fft::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void fft::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void fft::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void fft::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void fft::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fft::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void fft::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void fft::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fft::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fft::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fft::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fft::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fft::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fft::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln1786_fu_260_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fft::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln1786_fu_260_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fft::thread_cosa_lookup_table_address0() {
    cosa_lookup_table_address0 =  (sc_lv<13>) (sext_ln1797_fu_305_p1.read());
}

void fft::thread_cosa_lookup_table_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cosa_lookup_table_ce0 = ap_const_logic_1;
    } else {
        cosa_lookup_table_ce0 = ap_const_logic_0;
    }
}

void fft::thread_grp_bit_reverse_fu_190_ap_start() {
    grp_bit_reverse_fu_190_ap_start = grp_bit_reverse_fu_190_ap_start_reg.read();
}

void fft::thread_grp_fu_198_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_fu_198_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_198_opcode = ap_const_lv2_0;
    } else {
        grp_fu_198_opcode =  (sc_lv<2>) ("XX");
    }
}

void fft::thread_grp_fu_198_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_198_p0 = reg_230.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_198_p0 = tmp_reg_523.read();
    } else {
        grp_fu_198_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_198_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_198_p1 = reg_244.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_198_p1 = tmp_1_reg_528.read();
    } else {
        grp_fu_198_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_202_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_202_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_202_opcode = ap_const_lv2_0;
    } else {
        grp_fu_202_opcode =  (sc_lv<2>) ("XX");
    }
}

void fft::thread_grp_fu_202_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_202_p0 = reg_237.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_202_p0 = tmp_2_reg_533.read();
    } else {
        grp_fu_202_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_202_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_202_p1 = reg_250.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_202_p1 = tmp_3_reg_538.read();
    } else {
        grp_fu_202_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_i_1_fu_406_p2() {
    i_1_fu_406_p2 = (!zext_ln1788_reg_420.read().is_01() || !i_0_reg_181.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln1788_reg_420.read()) + sc_bigint<32>(i_0_reg_181.read()));
}

void fft::thread_i_cast_fu_290_p1() {
    i_cast_fu_290_p1 = esl_zext<32,14>(i_reg_158.read());
}

void fft::thread_i_lower_fu_389_p2() {
    i_lower_fu_389_p2 = (!i_0_reg_181.read().is_01() || !numBF_reg_430.read().is_01())? sc_lv<32>(): (sc_bigint<32>(i_0_reg_181.read()) + sc_biguint<32>(numBF_reg_430.read()));
}

void fft::thread_icmp_ln1786_fu_260_p2() {
    icmp_ln1786_fu_260_p2 = (!stage_0_reg_146.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(stage_0_reg_146.read() == ap_const_lv4_F);
}

void fft::thread_icmp_ln1796_fu_294_p2() {
    icmp_ln1796_fu_294_p2 = (!i_reg_158.read().is_01() || !trunc_ln_reg_425.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_158.read() == trunc_ln_reg_425.read());
}

void fft::thread_icmp_ln1813_fu_383_p2() {
    icmp_ln1813_fu_383_p2 = (!tmp_11_fu_373_p4.read().is_01() || !ap_const_lv18_1.is_01())? sc_lv<1>(): (sc_bigint<18>(tmp_11_fu_373_p4.read()) < sc_bigint<18>(ap_const_lv18_1));
}

void fft::thread_j_fu_299_p2() {
    j_fu_299_p2 = (!i_reg_158.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(i_reg_158.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void fft::thread_k_fu_411_p2() {
    k_fu_411_p2 = (!step_0_reg_134.read().is_01() || !k_0_reg_169.read().is_01())? sc_lv<32>(): (sc_biguint<32>(step_0_reg_134.read()) + sc_bigint<32>(k_0_reg_169.read()));
}

void fft::thread_lshr_ln1825_1_fu_325_p4() {
    lshr_ln1825_1_fu_325_p4 = sub_ln1825_fu_319_p2.read().range(31, 1);
}

void fft::thread_lshr_ln1825_2_fu_345_p4() {
    lshr_ln1825_2_fu_345_p4 = step_0_reg_134.read().range(31, 1);
}

void fft::thread_numBF_fu_286_p1() {
    numBF_fu_286_p1 = esl_zext<32,14>(trunc_ln_fu_276_p4.read());
}

void fft::thread_sext_ln1797_fu_305_p1() {
    sext_ln1797_fu_305_p1 = esl_sext<64,32>(k_0_reg_169.read());
}

void fft::thread_sext_ln1816_fu_394_p1() {
    sext_ln1816_fu_394_p1 = esl_sext<64,32>(i_lower_fu_389_p2.read());
}

void fft::thread_sext_ln1818_fu_400_p1() {
    sext_ln1818_fu_400_p1 = esl_sext<64,32>(i_0_reg_181.read());
}

void fft::thread_sina_lookup_table_address0() {
    sina_lookup_table_address0 =  (sc_lv<13>) (sext_ln1797_fu_305_p1.read());
}

void fft::thread_sina_lookup_table_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sina_lookup_table_ce0 = ap_const_logic_1;
    } else {
        sina_lookup_table_ce0 = ap_const_logic_0;
    }
}

void fft::thread_stage_fu_367_p2() {
    stage_fu_367_p2 = (!stage_0_reg_146.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(stage_0_reg_146.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fft::thread_step_fu_359_p3() {
    step_fu_359_p3 = (!tmp_10_fu_311_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_10_fu_311_p3.read()[0].to_bool())? sub_ln1825_1_fu_339_p2.read(): zext_ln1825_1_fu_355_p1.read());
}

void fft::thread_sub_ln1825_1_fu_339_p2() {
    sub_ln1825_1_fu_339_p2 = (!ap_const_lv32_0.is_01() || !zext_ln1825_fu_335_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(zext_ln1825_fu_335_p1.read()));
}

void fft::thread_sub_ln1825_fu_319_p2() {
    sub_ln1825_fu_319_p2 = (!ap_const_lv32_0.is_01() || !step_0_reg_134.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(step_0_reg_134.read()));
}

void fft::thread_tmp_10_fu_311_p3() {
    tmp_10_fu_311_p3 = step_0_reg_134.read().range(31, 31);
}

void fft::thread_tmp_11_fu_373_p4() {
    tmp_11_fu_373_p4 = i_0_reg_181.read().range(31, 14);
}

void fft::thread_trunc_ln_fu_276_p4() {
    trunc_ln_fu_276_p4 = DFTpts_fu_266_p2.read().range(14, 1);
}

void fft::thread_zext_ln1786_fu_256_p1() {
    zext_ln1786_fu_256_p1 = esl_zext<15,4>(stage_0_reg_146.read());
}

void fft::thread_zext_ln1788_fu_272_p1() {
    zext_ln1788_fu_272_p1 = esl_zext<32,15>(DFTpts_fu_266_p2.read());
}

void fft::thread_zext_ln1825_1_fu_355_p1() {
    zext_ln1825_1_fu_355_p1 = esl_zext<32,31>(lshr_ln1825_2_fu_345_p4.read());
}

void fft::thread_zext_ln1825_fu_335_p1() {
    zext_ln1825_fu_335_p1 = esl_zext<32,31>(lshr_ln1825_1_fu_325_p4.read());
}

void fft::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_bit_reverse_fu_190_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln1786_fu_260_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln1796_fu_294_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1813_fu_383_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<31>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

